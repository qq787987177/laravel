swagger: '2.0'
info:
  title: 安心商城后台接口文档
  description: 安心商城接口文档
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.0
host:
basePath: /api
schemes:
  - http
paths:
  /balance/list.json:
    get:
      tags:
        - 库存结算
      summary: 结算列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]获取成功'
          schema:
            $ref: '#/definitions/balanceList'
      security:
        - api_key: []
  /balance/balance.json:
    get:
      tags:
        - 库存结算
      summary: 结算
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]获取成功'
          schema:
            $ref: '#/definitions/balanceList'
      security:
        - api_key: []
  /balance/history.json:
    get:
      tags:
        - 库存结算
      summary: 库存结算历史记录
      parameters:
        - name: balance_id
          in: query
          description: 结算记录ID
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]获取成功'
          schema:
            $ref: '#/definitions/balanceHistory'
      security:
        - api_key: []
  /balance/history-list.json:
    get:
      tags:
        - 库存结算
      summary: 库存结算历史记录商品列表
      parameters:
        - name: balance_id
          in: query
          description: 结算记录ID
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]获取成功'
          schema:
            $ref: '#/definitions/balanceHistoryList'
      security:
        - api_key: []
  /balance/detail.json:
    get:
      tags:
        - 库存结算
      summary: 详细进货信息
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
        - name: goods_sn
          in: query
          description: 商品编码
          required: true
          type: integer
        - name: balance_id
          in: query
          description: 结算记录ID
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]获取成功'
          schema:
            $ref: '#/definitions/balanceDetail'
      security:
        - api_key: []
  /cs/scan-shop/scanPay.json:
    post:
      tags:
        - scan-shop
      summary: 扫码支付
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/scanPay'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/scan-shop/banner.json:
    get:
      tags:
        - scan-shop
      summary: banner
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/scanbanner'
      security:
        - api_key: []
  /cs/scan-shop/depotList.json:
    get:
      tags:
        - scan-shop
      summary: 提货点列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/depotListResponse'
      security:
        - api_key: []
  /cs/scan-shop/create.json:
    post:
      tags:
        - scan-shop
      summary: 创建订单
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/createCsOrder'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/scanShopcreateResponse'
      security:
        - api_key: []
  /cs/scan-shop/state.json:
    get:
      tags:
        - scan-shop
      summary: 获取订单状态
      parameters:
        - name: order_sn
          in: query
          description: 订单编码
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/scanShopState'
      security:
        - api_key: []
  /cs/scan-shop/get.json:
    get:
      tags:
        - scan-shop
      summary: 扫码购物订单列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/scanShopget'
      security:
        - api_key: []
  /cs/scan-shop/get-goods.json:
    get:
      tags:
        - scan-shop
      summary: 扫码得到商品
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
        - name: goods_sn
          in: query
          description: 商品编码
          required: true
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/scanShopgetgoods'
      security:
        - api_key: []
  /activity/add.json:
    post:
      tags:
        - activity
      summary: 添加活动
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/activityAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /activity/{id}.json:
    put:
      tags:
        - activity
      summary: 编辑活动
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/activityAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /activity/goods.json:
    get:
      tags:
        - activity
      summary: 验证赠送商品ID接口
      parameters:
        - name: goods_id
          type: integer
          in: query
          required: true
        - name: depot_id
          type: integer
          in: query
          required: true
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /activity/delete.json:
    get:
      tags:
        - activity
      summary: 删除活动
      parameters:
        - name: id
          type: integer
          in: query
          required: true
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /activity/list.json:
    get:
      tags:
        - activity
      summary: 活动列表
      parameters:
        - name: page
          type: integer
          in: query
          required: false
        - name: size
          type: integer
          in: query
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/activityList'
      security:
        - api_key: []
  /application/change.json:
    get:
      tags:
        - application
      summary: 修改模块状态
      parameters:
        - name: id
          type: integer
          in: query
          required: true
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /application/category-list.json:
    get:
      tags:
        - application
      summary: 模块分类列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/applicationcategoryList'
      security:
        - api_key: []
  /application/list:
    get:
      tags:
        - application
      summary: 模块列表
      parameters:
        - name: page
          type: integer
          in: query
          required: false
        - name: is_open
          type: integer
          in: query
          required: false
          description: 是否开启 0:关闭 1:开启
        - name: category_id
          type: integer
          in: query
          required: false
          description: 类型ID
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/applicationList'
      security:
        - api_key: []
  /application/add.json:
    post:
      tags:
        - application
      summary: 添加模块
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/applicationAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /application/{id}.json:
    put:
      tags:
        - application
      summary: 修改模块
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/applicationAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /application-category/change.json:
    get:
      tags:
        - application
      summary: 修改模块分类状态
      parameters:
        - name: id
          type: integer
          in: query
          required: true
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /application-category/list.json:
    get:
      tags:
        - application
      summary: 模块分类列表
      parameters:
        - name: page
          type: integer
          in: query
          required: false
        - name: is_open
          type: integer
          in: query
          required: false
          description: 是否开启 0:关闭 1:开启
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/applicationCategoryList'
      security:
        - api_key: []
  /application-category/add.json:
    post:
      tags:
        - application
      summary: 添加模块分类
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/applicationCategoryAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /application-category/{id}.json:
    put:
      tags:
        - application
      summary: 修改模块分类
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/applicationCategoryAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /popup/add.json:
    post:
      tags:
        - popup
      summary: 添加弹窗
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/popupAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /popup/{id}.json:
    put:
      tags:
        - popup
      summary: 修改弹窗
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/popupAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /popup/list.json:
    get:
      tags:
        - popup
      summary: 弹窗列表
      parameters:
        - name: page
          in: query
          required: false
          type: integer
        - name: size
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/popupListResponse'
      security:
        - api_key: []
  /popup/get.json:
    get:
      tags:
        - popup
      summary: 获取弹窗
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/popupGetResponse'
      security:
        - api_key: []
  /popup/read.json:
    get:
      tags:
        - popup
      summary: 弹窗不再弹出
      parameters:
        - name: id
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /popup/close.json:
    get:
      tags:
        - popup
      summary: 弹窗关闭
      parameters:
        - name: id
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /popup/delete.json:
    get:
      tags:
        - popup
      summary: 弹窗删除
      parameters:
        - name: id
          in: query
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral/add.json:
    post:
      tags:
        - integralSend
      summary: 添加发送积分
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/integralAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral/{id}.json:
    put:
      tags:
        - integralSend
      summary: 修改积分列表
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/integralAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral/getCreatorList.json:
    get:
      tags:
        - integralSend
      summary: 已发送的用户列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/createResponse'
      security:
        - api_key: []
  /integral/list.json:
    get:
      tags:
        - integralSend
      summary: 发送列表
      parameters:
        - name: page
          in: query
          required: false
          type: integer
          description: 页码
        - name: size
          in: query
          required: false
          type: integer
          description: 每页数量
        - name: title
          in: query
          required: false
          type: string
          description: 活动名称
        - name: create_user_id
          in: query
          required: false
          type: integer
          description: 创建人ID
        - name: phone
          in: query
          required: false
          type: integer
          description: 手机号码
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralList'
      security:
        - api_key: []
  /integral/close.json:
    get:
      tags:
        - integralSend
      summary: 关闭发送
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral/pause.json:
    get:
      tags:
        - integralSend
      summary: 暂停发送
      parameters:
        - name: id
          in: query
          required: true
          type: integer
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/check.json:
    get:
      tags:
        - integralQrcode
      summary: 查看二维码编号列表
      parameters:
        - name: id
          in: query
          required: true
          description: id
        - name: page
          in: query
          required: false
          description: page
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/checkResponse'
      security:
        - api_key: []
  /integral-qrcode/re-create.json:
    get:
      tags:
        - integralQrcode
      summary: 重新生成二维码
      parameters:
        - name: id
          in: query
          required: true
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/see.json:
    get:
      tags:
        - integralQrcode
      summary: 查看二维码领取状态
      parameters:
        - name: id
          in: query
          required: true
          description: id
        - name: page
          in: query
          required: false
          description: page
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/seeResponse'
      security:
        - api_key: []
  /integral-qrcode/download.json:
    get:
      tags:
        - integralQrcode
      summary: 下载二维码
      parameters:
        - name: id
          in: query
          required: true
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/close.json:
    get:
      tags:
        - integralQrcode
      summary: 关闭二维码
      parameters:
        - name: id
          in: query
          required: true
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/add.json:
    post:
      tags:
        - integralQrcode
      summary: 创建二维码
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/createQrcode'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/{id}.json:
    put:
      tags:
        - integralQrcode
      summary: 修改二维码
      parameters:
        - name: id
          in: path
          required: true
          description: id
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/editQrcode'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /integral-qrcode/list.json:
    get:
      tags:
        - integralQrcode
      summary: 积分新建记录
      parameters:
        - name: page
          in: query
          required: false
          description: 页数
        - name: size
          in: query
          required: false
          description: 每页数量
        - name: status
          in: query
          required: false
          description: 状态 sended:成功发放 expire:已失效
        - name: title
          in: query
          required: false
          description: 活动名称
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/QRlistResponse'
      security:
        - api_key: []
  /integral-qrcode/get-list.json:
    get:
      tags:
        - integralQrcode
      summary: 领取记录
      parameters:
        - name: page
          in: query
          required: false
          description: 页数
        - name: size
          in: query
          required: false
          description: 每页数量
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/QRGetlistResponse'
      security:
        - api_key: []
  /del-cache:
    get:
      tags:
        - del-cache
      summary: 清除缓存
      parameters:
        - name: order_sn
          in: query
          required: false
          description: 订单编码
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /easymart/order/state.json:
    get:
      tags:
        - easymart/order
      summary: 是否完成
      parameters:
        - name: order_sn
          in: query
          required: true
          description: 订单编码
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /easymart/order/getDetailByGoodsSn.json:
    get:
      tags:
        - easymart/order
      summary: 根据商品编码搜索商品
      parameters:
        - name: goods_sn
          in: query
          required: true
          description: 商品编码
        - name: depot_id
          in: query
          required: true
          description: 商品编码
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/getDetailByGoodsSnResponse'
      security:
        - api_key: []
  /easymart/order/create.json:
    post:
      tags:
        - easymart/order
      summary: 后台创建订单
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/createCsOrder'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /easymart/order/scanPay.json:
    post:
      tags:
        - easymart/order
      summary: 后台扫码支付
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/scanPay'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/get-transmits-coupon.json:
    get:
      tags:
        - coupon
      summary: 优惠券列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/transmitsCouponList'
      security:
        - api_key: []
  /coupon/changeStatus.json:
    get:
      tags:
        - coupon
      summary: 修改优惠券状态
      parameters:
        - name: send_type
          in: query
          required: false
          description: 发送类型 normal:普通发送 special:特殊发送
        - name: send_id
          in: query
          required: false
          description: 页码
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/delete-qr.json:
    get:
      tags:
        - coupon
      summary: 作废优惠券的二维码
      parameters:
        - name: id
          in: query
          required: true
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/delete.json:
    get:
      tags:
        - coupon
      summary: 作废优惠券
      parameters:
        - name: id
          in: query
          required: true
          description: id
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/qr-code.json:
    get:
      tags:
        - coupon
      summary: 优惠券二维码
      parameters:
        - name: id
          in: query
          required: true
          description: 优惠券ID
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/couponQrCodeResponse'
      security:
        - api_key: []
  /coupon/cancel.json:
    get:
      tags:
        - coupon
      summary: 取消优惠券发送
      parameters:
        - name: send_id
          in: query
          required: false
          description: 页码
        - name: send_type
          in: query
          required: false
          description: 发送类型 normal:普通发送 special:特殊发送
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/getAll.json:
    get:
      tags:
        - coupon
      summary: 优惠券列表
      parameters:
        - name: status
          in: query
          required: false
          description: 状态 overdue:已过期 sending:正常发放 deleted:已作废
        - name: page
          in: query
          required: false
          description: 页码
        - name: size
          in: query
          required: false
          description: 每页数量
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/CouponList'
      security:
        - api_key: []
  /coupon/getDetailByGoodsSn.json:
    get:
      tags:
        - coupon
      summary: 通过商品编号查找商品
      parameters:
        - name: goods_sn
          in: query
          required: true
          description: 商品编号
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/GoodsDetail'
      security:
        - api_key: []
  /coupon/specialSend.json:
    post:
      tags:
        - coupon
      summary: 发送特殊优惠券
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/addCoupon'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/add.json:
    post:
      tags:
        - coupon
      summary: 添加优惠券
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/addsCoupon'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/numberOfPeople.json:
    post:
      tags:
        - coupon
      summary: 计算符合条件总人数
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/numberOfPeople'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/send.json:
    post:
      tags:
        - coupon
      summary: 发送优惠券
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/sendCoupon'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /coupon/sendList.json:
    get:
      tags:
        - coupon
      summary: 发送列表 状态 sending:发放中 pause:已暂停 sended:已发送 wait:未发送
      parameters:
        - name: status
          in: query
          description: 状态
          required: false
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/sendListResponse'
      security:
        - api_key: []
  /appnotice/add.json:
    post:
      tags:
        - appnotice
      summary: 创建消息
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/AppNotice'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /appnotice/del.json:
    get:
      tags:
        - appnotice
      summary: 删除消息
      parameters:
        - name: id
          in: query
          description: 幻灯片id
          required: true
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /appnotice/get.json:
    get:
      tags:
        - appnotice
      summary: 获取消息列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /appnotice/toggle.json:
    post:
      tags:
        - appnotice
      summary: 切换消息状态
      parameters:
        - name: id
          in: query
          description: 幻灯片id
          required: true
          type: string
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/regionlist.json:
    post:
      tags:
        - common
      summary: 地址列表，默认省份列表
      parameters:
        - name: id
          in: query
          description: 地址id
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/model-list.json:
    get:
      tags:
        - common
      summary: 模块列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/modelListResponse'
      security:
        - api_key: []
  /common/change-model.json:
    get:
      tags:
        - common
      summary: 模块开启关闭
      parameters:
        - name: id
          in: query
          description: 模块ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/sort-model.json:
    post:
      tags:
        - common
      summary: 模块排序
      parameters:
        - name: data
          in: body
          description: 模块排序详情
          schema:
            $ref: '#/definitions/sortIndex'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/set-option.json:
    post:
      tags:
        - common
      summary: 模块配置
      parameters:
        - name: data
          in: body
          description: 模块排序详情
          schema:
            $ref: '#/definitions/setOption'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/option-detail.json:
    post:
      tags:
        - common
      summary: 模块配置详情
      parameters:
        - name: data
          in: body
          description: 模块排序详情
          schema:
            $ref: '#/definitions/optionDetail'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /common/uploadimg.json:
    post:
      tags:
        - common
      summary: 上传图片，暂时不支持模拟，file name ：file_data
      parameters:
        - name: dir
          in: query
          description: 图片分类名称
          required: true
          type: array
          items:
            type: string
            default: goods
            enum:
              - goods
              - category
              - user
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/category/add.json:
    post:
      tags:
        - cs/category
      summary: 添加分类
      parameters:
        - name: data
          in: body
          description: 分类详情
          schema:
            $ref: '#/definitions/ShopCategory'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/category/del.json:
    get:
      tags:
        - cs/category
      summary: 删除分类
      parameters:
        - name: id
          in: query
          description: 分类id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/category/get.json:
    get:
      tags:
        - cs/category
      summary: 便利店分类列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/CategoryList'
      security:
        - api_key: []
  /cs/goods/stockNum.json:
    get:
      tags:
        - cs/goods
      summary: 获取分类对应数量
      parameters:
        - name: cid
          description: 分类ID
          in: query
          required: false
          type: integer
        - name: depot_id
          description: 提货点ID
          in: query
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/stockNumResponse'
      security:
        - api_key: []
  /cs/goods/add.json:
    post:
      tags:
        - cs/goods
      summary: 添加便利店商品
      parameters:
        - name: data
          in: body
          description: 便利店商品对象
          required: true
          schema:
            $ref: '#/definitions/CsGoods'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/add-index-intro.json:
    get:
      tags:
        - cs/goods
      summary: 添加首页商品推荐
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: id
          in: query
          description: 商品ID
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/delete-index-intro.json:
    get:
      tags:
        - cs/goods
      summary: 删除首页商品推荐
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: id
          in: query
          description: 商品ID
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/update-index-intro.json:
    post:
      tags:
        - cs/goods
      summary: 商品首页推荐排序更新
      parameters:
        - name: data
          in: body
          description: 排序对象
          required: true
          schema:
            $ref: '#/definitions/updateIntro'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/change-expiry-date.json:
    post:
      tags:
        - cs/goods
      summary: 修改保质期
      parameters:
        - name: data
          in: body
          description: 保质期对象
          required: true
          schema:
            $ref: '#/definitions/expire'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/expiry-notice.json:
    get:
      tags:
        - cs/goods
      summary: 保质期到期提醒
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/expiryNotice'
      security:
        - api_key: []
  /cs/goods/index-intro-list.json:
    get:
      tags:
        - cs/goods
      summary: 某个提货点某个分类的没有推荐的首页商品列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: cid
          in: query
          description: cid
          required: false
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/stockList'
      security:
        - api_key: []
  /cs/goods/batchIntro.json:
    post:
      tags:
        - cs/goods
      summary: 批量设置推荐
      parameters:
        - name: data
          in: body
          description: 商品id数组
          required: true
          schema:
            $ref: '#/definitions/IdArray'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/batchOffsale.json:
    post:
      tags:
        - cs/goods
      summary: 批量下架商品
      parameters:
        - name: data
          in: body
          description: 上架商品对象
          required: true
          schema:
            $ref: '#/definitions/BatchOffsaleRequest'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/batchOnsale.json:
    post:
      tags:
        - cs/goods
      summary: 批量上架商品
      parameters:
        - name: data
          in: body
          description: 上架商品对象
          required: true
          schema:
            $ref: '#/definitions/BatchOnsaleRequest'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/batchUnIntro.json:
    post:
      tags:
        - cs/goods
      summary: 批量取消推荐
      parameters:
        - name: data
          in: body
          description: 商品id数组
          required: true
          schema:
            $ref: '#/definitions/IdArray'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/beginsale.json:
    post:
      tags:
        - cs/goods
      summary: 开始售卖
      parameters:
        - name: data
          in: body
          description: 便利店商品对象
          required: true
          schema:
            $ref: '#/definitions/beginsale'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/del.json:
    get:
      tags:
        - cs/goods
      summary: 删除商品
      parameters:
        - name: id
          in: query
          description: 商品id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/detail.json:
    get:
      tags:
        - cs/goods
      summary: 商品内容
      parameters:
        - name: id
          in: query
          description: 商品id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/goodDetail'
      security:
        - api_key: []
  /cs/goods/get.json:
    get:
      tags:
        - cs/goods
      summary: 获取商品列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: keyword
          in: query
          description: 关键字
          type: string
        - name: goods_sn
          in: query
          description: 商品编码
          type: string
        - name: is_delete
          in: query
          description: 是否删除
          type: integer
        - name: is_on_sale
          in: query
          description: 是否上架
          type: integer
        - name: category_id
          in: query
          description: 分类ID
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/goodlist'
      security:
        - api_key: []
  /cs/goods/offsale.json:
    post:
      tags:
        - cs/goods
      summary: 商品下架
      parameters:
        - name: data
          in: body
          description: 便利店商品对象
          required: true
          schema:
            $ref: '#/definitions/offsale'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/onsale.json:
    post:
      tags:
        - cs/goods
      summary: 商品上架到某个提货点
      parameters:
        - name: data
          in: body
          description: 便利店商品对象
          required: true
          schema:
            $ref: '#/definitions/onsale'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/pandian.json:
    post:
      tags:
        - cs/goods
      summary: 盘点商品
      parameters:
        - name: data
          in: body
          description: 盘点商品对象
          required: true
          schema:
            $ref: '#/definitions/pandianRequest'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/pausesale.json:
    post:
      tags:
        - cs/goods
      summary: 暂停售卖
      parameters:
        - name: data
          in: body
          description: 便利店商品对象
          required: true
          schema:
            $ref: '#/definitions/pausesale'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/setstock.json:
    post:
      tags:
        - cs/goods
      summary: 设置某个商品在某个提货点的库存
      parameters:
        - name: data
          in: body
          description: 提交数据
          required: true
          schema:
            required:
              - id
              - depot_id
              - stock
            properties:
              id:
                description: 商品id
                type: string
                example: '1'
              depot_id:
                description: 提货点id
                type: string
                example: '1'
              stock:
                description: 设置库存数量
                type: string
                example: '12'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/intro-list.json:
    get:
      tags:
        - cs/goods
      summary: 首页推荐列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: cid
          in: query
          description: cid
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/introListResponse'
      security:
        - api_key: []
  /cs/goods/update-intro.json:
    get:
      tags:
        - cs/goods
      summary: 更新自动推荐
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/update-intro-order.json:
    post:
      tags:
        - cs/goods
      summary: 商品首页推荐权重更新
      parameters:
        - name: data
          in: body
          description: 排序对象
          required: true
          schema:
            $ref: '#/definitions/updateIntro'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/stockList.json:
    get:
      tags:
        - cs/goods
      summary: 某个提货点某个分类的上架或者没有上架的商品列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: cid
          in: query
          description: cid
          required: false
          type: integer
        - name: type
          in: query
          description: 类型
          required: false
          type: string
        - name: is_intro
          in: query
          description: 是否为推荐列表
          required: false
          type: integer
          default: 1
        - name: index_intro
          in: query
          description: 是否为首页推荐
          required: false
          type: integer
          default: 1
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/stockList'
      security:
        - api_key: []
  /cs/goods/stockLogs.json:
    get:
      tags:
        - cs/goods
      summary: 日志列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
          default: 1
        - name: category
          in: query
          description: 记录类目
          type: string
          default: 库存盘点
        - name: start_day
          in: query
          description: 开始时间
          type: string
        - name: end_day
          in: query
          description: 结束时间
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/stockLogs'
      security:
        - api_key: []
  /cs/goods/toggle.json:
    get:
      tags:
        - cs/goods
      summary: 切换商品状态
      parameters:
        - name: id
          in: query
          description: 商品id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/toggleIntro.json:
    get:
      tags:
        - cs/goods
      summary: 变更商品推荐状态
      parameters:
        - name: id
          in: query
          description: 商品id
          type: integer
          default: 1
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/goods/updateCategory.json:
    post:
      tags:
        - cs/goods
      summary: 商品分类排序更新
      parameters:
        - name: data
          in: body
          description: 排序对象
          required: true
          schema:
            $ref: '#/definitions/updateCategory'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/close.json:
    post:
      tags:
        - cs/order
      summary: 关闭订单
      parameters:
        - name: data
          in: body
          description: 关闭订单数据
          required: true
          schema:
            $ref: '#/definitions/close'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/applyServer.json:
    post:
      tags:
        - cs/order
      summary: 申请售后服务
      parameters:
        - name: data
          in: body
          description: 售后数据
          required: true
          schema:
            $ref: '#/definitions/applyServer'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/getAll.json:
    get:
      tags:
        - cs/order
      summary: 订单列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: start_time
          in: query
          description: 开始时间
          type: string
        - name: end_time
          in: query
          description: 结束时间
          type: string
        - name: type
          in: query
          description: '订单类型 all:全部订单 wait:待处理 shipping: 待领取 finished:已完成 refunded:已退款 refunding:待退款'
          type: array
          items:
            type: string
            default: ''
            enum:
              - all
              - shipping
              - wait
              - finished
              - refunded
              - refunding
        - name: phone
          in: query
          description: 手机号码
          type: string
        - name: order_sn
          in: query
          description: 订单编号
          type: string
        - name: depot_id
          in: query
          description: 提货点ID
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/getAllOrder'
      security:
        - api_key: []
  /cs/order/getNewOrderList.json:
    get:
      tags:
        - cs/order
      summary: 获取待处理订单总数
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/getOrderByNumber.json:
    get:
      tags:
        - cs/order
      summary: 验证提货码
      parameters:
        - name: number
          in: query
          description: 提货码
          required: true
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
#  /cs/order/newest.json:
#    get:
#      tags:
#        - cs/order
#      summary: 获取新订单列表
#      parameters:
#        - name: order_sn
#          in: query
#          description: 订单编号
#          required: false
#          type: string
#        - name: depot_id
#          in: query
#          description: 提货点ID
#          required: true
#          type: integer
#      responses:
#        '200':
#          description: success
#          schema:
#            $ref: '#/definitions/newestList'
#      security:
#        - api_key: []
  /cs/order/noverify.json:
    get:
      tags:
        - cs/order
      summary: 无需验证收货
      parameters:
        - name: order_sn
          in: query
          description: 订单编号
          required: true
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/prepare.json:
    get:
      tags:
        - cs/order
      summary: 备货
      parameters:
        - name: order_sn
          in: query
          description: 订单编号
          required: true
          type: string
        - name: courier_id
          in: query
          description: 配送员ID
          required: false
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/order/verify.json:
    post:
      tags:
        - cs/order
      summary: 验证订单
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/verify'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/purchase/deleteCurrentPrice.json:
    post:
      tags:
        - cs/purchase
      summary: 同步官方价
      parameters:
        - name: data
          in: body
          description: 进货商品对象
          required: true
          schema:
            $ref: '#/definitions/deleteCurrentPrice'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/purchase/add.json:
    post:
      tags:
        - cs/purchase
      summary: 进货接口
      parameters:
        - name: data
          in: body
          description: 进货商品对象
          required: true
          schema:
            $ref: '#/definitions/purchaseAdd'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/purchase/list.json:
    get:
      tags:
        - cs/purchase
      summary: 进货单列表接口
      parameters:
        - name: start_time
          in: query
          description: 开始时间
          required: false
          type: string
        - name: end_time
          in: query
          description: 结束时间
          required: false
          type: string
        - name: purchase_sn
          in: query
          description: 进货单单号
          required: false
          type: string
        - name: page
          in: query
          description: 页码
          required: false
          type: integer
        - name: size
          in: query
          description: 每页数量
          required: false
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/purchaseList'
      security:
        - api_key: []
  /cs/purchase/detail.json:
    get:
      tags:
        - cs/purchase
      summary: 进货单查看接口
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/purchasedetail'
      security:
        - api_key: []
  /cs/purchase/temp-set.json:
    post:
      tags:
        - cs/purchase
      summary: 设置临时进货
      parameters:
        - name: data
          in: body
          description: 设置临时进货对象
          required: true
          schema:
            $ref: '#/definitions/tempSet'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/purchase/temp-list.json:
    get:
      tags:
        - cs/purchase
      summary: 临时进货列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/tempListResponse'
      security:
        - api_key: []
  /cs/purchase/temp-rm.json:
    get:
      tags:
        - cs/purchase
      summary: 删除临时进货
      parameters:
        - name: sn
          in: query
          description: sn
          required: true
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/tempListResponse'
      security:
        - api_key: []
  /cs/purchase/update.json:
    post:
      tags:
        - cs/purchase
      summary: 撤销进货
      parameters:
        - name: data
          in: body
          description: 撤销进货对象
          required: true
          schema:
            $ref: '#/definitions/updateJinghuoRequest'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /cs/purchase/updateCurrentPrice.json:
    post:
      tags:
        - cs/purchase
      summary: 更新提货点售价
      parameters:
        - name: data
          in: body
          description: 更新均价对象
          required: true
          schema:
            $ref: '#/definitions/updateCurrentPrice'
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/add.json:
    post:
      tags:
        - depot
      summary: 添加提货点
      parameters:
        - name: data
          in: body
          description: 提货点数据
          required: true
          schema:
            $ref: '#/definitions/Depot'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/courier/add.json:
    post:
      tags:
        - courier
      summary: 添加配送员
      parameters:
        - name: data
          in: body
          description: 配送员对象
          required: true
          schema:
            $ref: '#/definitions/addcourier'
          type: object
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/courier/delete.json:
    get:
      tags:
        - courier
      summary: 删除配送员
      parameters:
        - name: id
          in: query
          description: 配送员ID
          required: true
          type: integer
          default: 1
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
          default: 1
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/courier/getAll.json:
    get:
      tags:
        - courier
      summary: 配送员列表
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
          default: 1
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/courierList'
      security:
        - api_key: []
  /depot/delivers/add.json:
    post:
      tags:
        - delivers
      summary: 设置提货点的配送费 和满多少免配送费
      parameters:
        - name: data
          in: body
          description: 进货商品对象
          required: true
          schema:
            $ref: '#/definitions/adddelivers'
          type: object
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/delivers/close.json:
    get:
      tags:
        - delivers
      summary: 停止配送
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
          default: 1
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/delivers/open.json:
    get:
      tags:
        - delivers
      summary: 开始配送
      parameters:
        - name: depot_id
          in: query
          description: 提货点ID
          required: true
          type: integer
          default: 1
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/get.json:
    get:
      tags:
        - depot
      summary: 获取提货点列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/getAll.json:
    get:
      tags:
        - depot
      summary: 获取提货点列表
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/rest.json:
    get:
      tags:
        - depot
      summary: 提货点休息
      parameters:
        - name: id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/startBusiness.json:
    get:
      tags:
        - depot
      summary: 提货点营业
      parameters:
        - name: id
          in: query
          description: 提货点ID
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /depot/toggle.json:
    get:
      tags:
        - depot
      summary: 开启/关闭 某个提货点
      parameters:
        - name: id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /log/get.json:
    post:
      tags:
        - log
      summary: 后台操作日志
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /refund/agree.json:
    post:
      tags:
        - refund
      summary: 同意退款
      parameters:
        - name: data
          in: body
          description: 同意退款数据
          required: true
          schema:
            $ref: '#/definitions/agree'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /refund/detail.json:
    get:
      tags:
        - refund
      summary: 退款详情
      parameters:
        - name: id
          in: query
          description: 退款id
          required: true
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/detailRefund'
      security:
        - api_key: []
  /refund/get.json:
    get:
      tags:
        - refund
      summary: 退款记录列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/logList'
      security:
        - api_key: []
  /refund/getAll.json:
    get:
      tags:
        - refund
      summary: 退款列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: order_sn
          in: query
          description: 订单编号
          type: string
        - name: depot_id
          in: query
          description: 提货点id
          type: integer
        - name: start_day
          in: query
          description: 开始时间
          type: string
        - name: end_day
          in: query
          description: 结束时间
          type: string
        - name: status
          in: query
          description: '退款状态 all:全部退款订单 refunded:已退款 refunding: 待退款'
          type: array
          items:
            type: string
            default: ''
            enum:
              - all
              - refunded
              - refunding
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/refundList'
      security:
        - api_key: []
  /refund/reject.json:
    post:
      tags:
        - refund
      summary: 拒绝退款
      parameters:
        - name: data
          in: body
          description: 拒绝退款数据
          required: true
          schema:
            $ref: '#/definitions/reject'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/integral-collect.json:
    get:
      tags:
        - report
      summary: 积分汇总报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralCollectResponse'
      security:
        - api_key: []
  /report/integral/cost:
    get:
      tags:
        - report
      summary: 积分使用情况表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralCostResponse'
      security:
        - api_key: []
  /report/integral/cost-chart:
    get:
      tags:
        - report
      summary: 积分使用情况表(图表)
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralCostChart'
      security:
        - api_key: []
  /report/integral/send:
    get:
      tags:
        - report
      summary: 积分发放情况表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralSendResponse'
      security:
        - api_key: []
  /report/integral/send-chart:
    get:
      tags:
        - report
      summary: 积分发放情况表(图表)
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/integralSendChart'
      security:
        - api_key: []
  /report/coupon:
    get:
      tags:
        - report
      summary: 优惠券统计表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/couponResponse'
      security:
        - api_key: []
  /report/business/profit:
    get:
      tags:
        - report
      summary: 营业情况汇总表
      parameters:
        - name: day
          in: query
          description: 日期
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/businessProfitResponse'
      security:
        - api_key: []
  /report/business/profit-weekly:
    get:
      tags:
        - report
      summary: 营业情况汇总周表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: size
          in: query
          description: 条数
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/businessProfitWeeklyResponse'
      security:
        - api_key: []
  /report/business/profit-monthly:
    get:
      tags:
        - report
      summary: 营业情况汇总月表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: size
          in: query
          description: 条数
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/businessProfitWeeklyResponse'
      security:
        - api_key: []
  /report/of/recharge:
    get:
      tags:
        - report
      summary: 欧飞充值报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: size
          in: query
          description: 条数
          type: integer
        - name: start_time
          in: query
          description: 开始时间
          type: string
          required: false
        - name: end_time
          in: query
          description: 结束时间
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ofRechargeResponse'
      security:
        - api_key: []
  /report/of/recharge/export:
    get:
      tags:
        - report
      summary: 欧飞充值报表(导出)
      parameters:
        - name: start_time
          in: query
          description: 开始时间
          type: string
          required: false
        - name: end_time
          in: query
          description: 结束时间
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/sales/total:
    get:
      tags:
        - report
      summary: 销量汇总报表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/totalSales'
      security:
        - api_key: []
  /report/refund/daily:
    get:
      tags:
        - report
      summary: 退货汇总报表
      parameters:
        - name: month
          in: query
          required: true
          description: 月份
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/dailyRefund'
      security:
        - api_key: []
  /report/refund/depot:
    get:
      tags:
        - report
      summary: 退货汇总门店日报表
      parameters:
        - name: day
          in: query
          required: true
          description: 日期
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/depotRefundDetail'
      security:
        - api_key: []
  /report/refund/depot-goods:
    get:
      tags:
        - report
      summary: 退货汇总门店退款详情
      parameters:
        - name: day
          in: query
          required: true
          description: 日期
          type: string
        - name: depot_id
          in: query
          required: true
          description: 便利店id
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/depotRefundGoodsDetail'
      security:
        - api_key: []
  /report/refund/goods:
    get:
      tags:
        - report
      summary: 某天退货总商品列表
      parameters:
        - name: day
          in: query
          required: true
          description: 日期
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/refundGoods'
      security:
        - api_key: []
  /report/price/monthly:
    get:
      tags:
        - report
      summary: 当月均值报表
      parameters:
        - name: day
          in: query
          description: 日期
          type: string
          required: true
        - name: sort_name
          in: query
          description: 排序的字段
          type: string
          required: false
        - name: sort
          in: query
          description: 排序
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/avgSales'
      security:
        - api_key: []
  /report/price/update:
    post:
      tags:
        - report
      summary: 更新当月均值总床位数
      parameters:
      - name: data
        in: body
        description: 日期
        required: true
        schema:
          type: array
          items:
            $ref: '#/definitions/updateAvgSales'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/price/chart:
    get:
      tags:
        - report
      summary: 当月均值图表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/avgSalesChart'
      security:
        - api_key: []
  /report/profit/monthly:
    get:
      tags:
        - report
      summary: 利润汇总报表
      parameters:
        - name: month
          in: query
          description: 月
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/totalProfitResponse'
      security:
        - api_key: []
  /report/profit/detail:
    get:
      tags:
        - report
      summary: 利润汇总报表详情
      parameters:
        - name: day
          in: query
          description: 日期
          type: string
          required: true
        - name: sort_name
          in: query
          description: 排序的字段
          type: string
          required: false
        - name: sort
          in: query
          description: 排序
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/totalProfitResponse'
      security:
        - api_key: []
  /report/profit/export:
    get:
      tags:
        - report
      summary: 利润汇总报表(导出)
      parameters:
        - name: month
          in: query
          description: 月
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/profit/export-detail:
    get:
      tags:
        - report
      summary: 利润汇总详情页(导出)
      parameters:
        - name: day
          in: query
          description: 日期
          type: string
          required: true
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/profit/chart:
    get:
      tags:
        - report
      summary: 利润汇总图表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/profitChartResponse'
      security:
        - api_key: []
  /report/sales/weekly:
    get:
      tags:
        - report
      summary: 销量汇总周报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/weeklySalesResponse'
      security:
        - api_key: []
  /report/sales/export-weekly:
    get:
      tags:
        - report
      summary: 导出销量汇总周报表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/sales/export-monthly:
    get:
      tags:
        - report
      summary: 导出销量汇总月报表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/refund/export-monthly:
    get:
      tags:
        - report
      summary: 导出退货汇总月报表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/refund/export-weekly:
    get:
      tags:
        - report
      summary: 导出退货汇总周报表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/sales/monthly:
    get:
      tags:
        - report
      summary: 销量汇总月报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/weeklySalesResponse'
      security:
        - api_key: []
  /report/refund/weekly:
    get:
      tags:
        - report
      summary: 退款汇总周报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/commonSalesResponse'
      security:
        - api_key: []
  /report/refund/monthly:
    get:
      tags:
        - report
      summary: 退款汇总月报表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/commonSalesResponse'
      security:
        - api_key: []
  /report/check/monthly:
    get:
      tags:
        - report
      summary: 商品盘点汇总月报表
      parameters:
        - name: month
          in: query
          required: false
          description: 月份
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/checkGoodsResponse'
      security:
        - api_key: []
  /report/check/export-monthly:
    get:
      tags:
        - report
      summary: 商品盘点汇总月导出
      parameters:
        - name: month
          in: query
          required: false
          description: 月份
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/sales/daily:
    get:
      tags:
        - report
      summary: 销量汇总日报表
      parameters:
        - name: day
          in: query
          required: true
          description: 日期
          type: string
        - name: sort_name
          in: query
          description: 排序的字段名称
          type: string
          required: false
        - name: sort
          in: query
          description: 排序
          type: string
          required: false
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/dailySales'
      security:
        - api_key: []
  /report/sales/export-daily:
    get:
      tags:
        - report
      summary: 销量汇总日报表（导出报表）
      parameters:
        - name: day
          in: query
          required: true
          description: 日期
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /report/sales/chart:
    get:
      tags:
        - report
      summary: 销量汇总日报表(图表)
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/chartSales'
      security:
        - api_key: []
  /report/profit.json:
    get:
      tags:
        - report
      summary: 利润报表
      parameters:
        - name: start_time
          in: query
          description: 开始时间
          required: false
          type: string
        - name: end_time
          in: query
          description: 结束时间
          required: false
          type: string
        - name: page
          in: query
          description: 页码
          type: integer
        - name: size
          in: query
          description: 每页条数
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/report'
      security:
        - api_key: []
  /report/store.json:
    get:
      tags:
        - report
      summary: 门店列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/store'
      security:
        - api_key: []
  /report/purchase.json:
    get:
      tags:
        - report
      summary: 进货报表
      parameters:
        - name: start_time
          in: query
          description: 开始时间
          required: false
          type: string
        - name: end_time
          in: query
          description: 结束时间
          required: false
          type: string
        - name: page
          in: query
          description: 页码
          type: integer
        - name: size
          in: query
          description: 每页条数
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: title
          in: query
          description: 商品名称
          required: false
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/purchase'
      security:
        - api_key: []
  /report/sales.json:
    get:
      tags:
        - report
      summary: 销量报表
      parameters:
        - name: start_time
          in: query
          description: 开始时间
          required: true
          type: string
        - name: end_time
          in: query
          description: 结束时间
          required: true
          type: string
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
        - name: title
          in: query
          description: 商品名称
          required: false
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/sales'
      security:
        - api_key: []
  /say/add.json:
    post:
      tags:
        - sayadmin
      summary: 写入文章
      parameters:
        - name: data
          in: body
          description: 写入文章
          required: true
          schema:
            $ref: '#/definitions/addSay'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/recommend-change.json:
    get:
      tags:
        - sayadmin
      summary: 文章首页推荐状态变更
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/approve.json:
    get:
      tags:
        - sayadmin
      summary: 文章通过审核
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/comment/add.json:
    post:
      tags:
        - sayadmin
      summary: 写入评论
      parameters:
        - name: data
          in: body
          description: 写入评论
          required: true
          schema:
            $ref: '#/definitions/addComment'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/comment/approve.json:
    get:
      tags:
        - sayadmin
      summary: 评论通过审核
      parameters:
        - name: id
          in: query
          description: 评论ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/comment/getAll.json:
    get:
      tags:
        - sayadmin
      summary: 评论列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: say_id
          in: query
          description: 帖子id
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/CommentListResponses'
      security:
        - api_key: []
  /say/comment/hide.json:
    get:
      tags:
        - sayadmin
      summary: 隐藏评论
      parameters:
        - name: id
          in: query
          description: 评论ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/comment/reject.json:
    get:
      tags:
        - sayadmin
      summary: 评论驳回审核
      parameters:
        - name: id
          in: query
          description: 评论ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/comment/show.json:
    get:
      tags:
        - sayadmin
      summary: 显示评论
      parameters:
        - name: id
          in: query
          description: 评论ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/detail.json:
    get:
      tags:
        - sayadmin
      summary: 文章内容
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/saydetailResponses'
      security:
        - api_key: []
  /say/getAll.json:
    get:
      tags:
        - sayadmin
      summary: 文章列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
        - name: quan_id
          in: query
          description: 圈ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/getAllResponses'
      security:
        - api_key: []
  /say/intro-list.json:
    get:
      tags:
        - sayadmin
      summary: 推荐列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/getAllResponses'
      security:
        - api_key: []
  /say/intro-change.json:
    get:
      tags:
        - sayadmin
      summary: 隐藏推荐或显示推荐
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/hide.json:
    get:
      tags:
        - sayadmin
      summary: 隐藏文章
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/mockuser/add.json:
    post:
      tags:
        - mockuser
      summary: 管理员添加伪装用户
      parameters:
        - name: data
          in: body
          description: 管理员添加伪装用户
          required: true
          schema:
            $ref: '#/definitions/addOperator'
          type: object
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/mockuser/delete.json:
    get:
      tags:
        - mockuser
      summary: 删除模拟用户
      parameters:
        - name: id
          in: query
          description: 管理员跟用户的关系id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/mockuser/getAll.json:
    get:
      tags:
        - mockuser
      summary: 管理员用户的关联列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/OperatorList'
      security:
        - api_key: []
  /say/quan/add.json:
    post:
      tags:
        - sayadmin
      summary: 增加圈
      parameters:
        - name: data
          in: body
          description: 增加圈
          required: true
          schema:
            $ref: '#/definitions/addQuan'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/close.json:
    get:
      tags:
        - sayadmin
      summary: 关闭圈
      parameters:
        - name: id
          in: query
          description: 圈ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/getAll.json:
    get:
      tags:
        - sayadmin
      summary: 圈列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/getAllQuan'
      security:
        - api_key: []
  /say/quan/open.json:
    get:
      tags:
        - sayadmin
      summary: 开启圈
      parameters:
        - name: id
          in: query
          description: 圈ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/update.json:
    post:
      tags:
        - sayadmin
      summary: 修改圈
      parameters:
        - name: data
          in: body
          description: 修改圈
          required: true
          schema:
            $ref: '#/definitions/updateQuan'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/reject.json:
    get:
      tags:
        - sayadmin
      summary: 文章驳回审核
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/show.json:
    get:
      tags:
        - sayadmin
      summary: 显示文章
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/update.json:
    post:
      tags:
        - sayadmin
      summary: 修改文章
      parameters:
        - name: data
          in: body
          description: 修改文章
          required: true
          schema:
            $ref: '#/definitions/updateSay'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/updatePraise.json:
    post:
      tags:
        - sayadmin
      summary: 修改点赞数
      parameters:
        - name: data
          in: body
          description: 修改点赞数
          required: true
          schema:
            $ref: '#/definitions/updateSayPraise'
          type: object
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/top.json:
    get:
      tags:
        - sayadmin
      summary: 文章置顶
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/gag.json:
    get:
      tags:
        - sayadmin
      summary: 禁止或开启圈发言
      parameters:
        - name: id
          in: query
          description: 圈ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/setDefault.json:
    get:
      tags:
        - sayadmin
      summary: 设置或取消默认圈子
      parameters:
        - name: id
          in: query
          description: 圈ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/change.json:
    get:
      tags:
        - sayadmin
      summary: 文章转移
      parameters:
        - name: id
          in: query
          description: 文章ID
          required: true
          type: integer
        - name: quan_id
          in: query
          description: 转移的圈子ID
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /say/quan/order.json:
    get:
      tags:
        - sayadmin
      summary: 圈子排序
      parameters:
        - name: id
          in: query
          description: 圈ID
          required: true
          type: integer
        - name: order_number
          in: query
          description: 排序
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /slide/add.json:
    post:
      tags:
        - slide
      summary: 创建幻灯片
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Slide'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /slide/del.json:
    get:
      tags:
        - slide
      summary: 删除某张幻灯片
      parameters:
        - name: id
          in: query
          description: 幻灯片id
          required: true
          type: integer
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /advert/{id}.json:
    put:
      tags:
        - advert
      summary: 更新启动屏广告
      parameters:
        - name: id
          type: integer
          in: path
          required: true
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/EditAdvert'
      responses:
        200:
          description: 'ok 更新成功'
          schema:
            $ref: '#/definitions/ApiResponse'
  /advert/add.json:
    post:
      tags:
        - advert
      summary: 创建启动屏广告
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Advert'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /advert/delete/{id}.json:
    delete:
      tags:
        - advert
      summary: 删除启动屏广告
      parameters:
        - name: id
          in: path
          required: true
          description: 启动屏id
          type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /advert/getList.json:
    get:
      tags:
        - advert
      summary: 启动屏广告列表
      parameters:
        - name: page
          in: query
          required: false
          description: 页码
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/advertGetAll'
      security:
        - api_key: []
  /setting/detail.json:
    get:
      tags:
        - setting
      summary: 配置详情
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /setting/update.json:
      post:
        tags:
          - setting
        summary: 更新配置(id=>'',value='')
        parameters:
          - name: data
            in: body
            required: true
            schema:
              type: array
              items:
                properties:
                  id:
                    description: 配置id
                    type: string
                  value:
                    description: 配置值
                    type: string
                type: object
            type: object
        responses:
          '200':
            description: 'OK'
            schema:
              $ref: '#/definitions/ApiResponse'
        security:
          - api_key: []
  /of/order/list.json:
    get:
      tags:
        - of
      summary: 订单列表
      parameters:
        - name: page
          in: query
          description: 分页
          required: false
          type: integer
        - name: size
          in: query
          description: 每页数量
          required: false
          type: integer
        - name: type
          in: query
          description: 类型（all,success,failed,refund）
          required: false
          type: string
        - name: start_time
          in: query
          description: 开始时间
          required: false
          type: string
        - name: end_time
          in: query
          description: 结束时间
          required: false
          type: string
        - name: account
          in: query
          description: 账号
          required: false
          type: string
        - name: order_sn
          in: query
          description: 订单号
          required: false
          type: string
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/order/recharge.json:
    get:
      tags:
        - of
      summary: 订单充值
      parameters:
        - name: id
          in: query
          description: 欧飞id
          required: true
          type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/order/refund.json:
    get:
      tags:
        - of
      summary: 订单退款
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
      responses:
        '200':
          description: 'OK'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/goods/edit.json:
    post:
      tags:
        - of
      summary: 添加欧飞商品
      parameters:
        - name: data
          in: body
          description: 欧飞商品对象
          required: true
          schema:
            $ref: '#/definitions/ofGoods'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []

  /of/goods/get.json:
    get:
      tags:
        - of
      summary: 获取欧飞商品列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: type
          in: query
          description: 类型
          type: string
          required: true
          default: 'phone'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ofGoodlist'
      security:
        - api_key: []
  /slide/get.json:
    get:
      tags:
        - slide
      summary: 幻灯片列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/slideListResponse'
      security:
        - api_key: []
  /slide/toggle.json:
    post:
      tags:
        - slide
      summary: 切换幻灯片的显示状态
      parameters:
        - name: id
          in: query
          description: 幻灯片id
          required: true
          type: string
        - name: depot_id
          in: query
          description: 提货点id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /banner/edit.json:
    post:
      tags:
        - banner
      summary: 编辑横幅
      parameters:
       - name: data
         in: body
         required: true
         schema:
           $ref: '#/definitions/addBanner'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /banner/get.json:
    get:
      tags:
        - banner
      summary: 横幅列表
      parameters:
        - name: page
          in: query
          description: 页码
          type: integer
          default: 1
        - name: size
          in: query
          description: 每页数量
          type: integer
          default: 10
        - name: is_show
          in: query
          description: 是否展示
          type: integer
        - name: category
          in: query
          description: 分类
          type: string
          default: 'home'
        - name: jump_type
          in: query
          description: 跳转类型
          type: string
          default: 'common'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/slideListResponse'
      security:
        - api_key: []
  /banner/del.json:
    get:
      tags:
        - banner
      summary: 删除横幅
      parameters:
        - name: id
          in: query
          description: 横幅id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /banner/toggle.json:
    get:
      tags:
        - banner
      summary: 更改横幅状态
      parameters:
        - name: id
          in: query
          description: 横幅id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /banner/init.json:
    get:
      tags:
        - banner
      summary: 初始化横幅
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/goods/costPrice/list.json:
    get:
      tags:
        - of
      summary: 进价单列表
      parameters:
        - name: goods_id
          in: query
          description: 商品id
          required: true
          type: integer
        - name: region_id
          in: query
          description: 省份id
          required: false
          type: integer
        - name: operators
          in: query
          description: 运营商
          required: false
          type: string
        - name: page
          in: query
          description: 分页
          required: false
          type: integer
          default: 1
        - name: size
          in: query
          description: 分页条数
          required: false
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/goodsCostPriceListResponse'
      security:
        - api_key: []
  /of/goods/costPrice/edit.json:
    post:
      tags:
        - of
      summary: 编辑欧飞商品进价单
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/costPriceData'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/goods/costPrice/remove.json:
    get:
      tags:
        - of
      summary: 删除进价单
      parameters:
        - name: id
          in: query
          description: 进价单id
          required: true
          type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /of/goods/setIntro.json:
    get:
      tags:
        - of
      summary: 设置推荐
      parameters:
        - name: id
          in: query
          description: 商品id
          required: true
          type: integer
          default: 1
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/add.json:
    post:
      tags:
        - taobao
      summary: 添加淘宝特惠分类
      parameters:
        - name: data
          in: body
          description: 淘宝特惠分类
          required: true
          schema:
            $ref: '#/definitions/addTaobaoCategory'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/bind.json:
    get:
      tags:
        - taobao
      summary: 绑定分类
      parameters:
       - name: id
         in: query
         description: id
         required: true
         type: integer
       - name: cid
         in: query
         description: 分类id
         required: true
         type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/clist.json:
    get:
      tags:
        - taobao
      summary: 分类列表
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/taobaoCategoryListResponse'
      security:
        - api_key: []
  /taobao/category/get.json:
    get:
      tags:
        - taobao
      summary: 获取列表
      parameters:
      - name: page
        type: integer
        in: query
        required: false
        default: 1
      - name: size
        type: integer
        in: query
        required: false
        default: 10
      - name: status
        in: query
        description: 状态
        required: true
        type: string
        default: 'all'
      - name: q
        in: query
        description: 搜索值
        required: false
        type: string
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/hide.json:
    get:
      tags:
        - taobao
      summary: 隐藏
      parameters:
       - name: id
         in: query
         description: id
         required: true
         type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/remove.json:
    get:
      tags:
        - taobao
      summary: 删除分类
      parameters:
       - name: id
         in: query
         description: id
         required: true
         type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/setOrderNum.json:
    get:
      tags:
        - taobao
      summary: 设置排序
      parameters:
       - name: id
         in: query
         description: id
         required: true
         type: integer
       - name: order_num
         in: query
         description: 序列
         required: true
         type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/show.json:
    get:
      tags:
        - taobao
      summary: 展示分类
      parameters:
       - name: id
         in: query
         description: id
         required: true
         type: integer
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/category/updateClistOrder.json:
    post:
      tags:
        - taobao
      summary: 更新分类列表排序
      parameters:
        - name: data
          in: body
          description: 分类列表
          required: true
          schema:
            $ref: '#/definitions/updateCategoryOrderByList'
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/goods/get.json:
    get:
      tags:
        - taobao
      summary: 获取商品列表
      parameters:
      - name: page
        type: integer
        in: query
        required: false
        default: 1
      - name: cid
        type: integer
        in: query
        required: true
      responses:
        '200':
          description: '[SUCCESS]成功'
          schema:
            $ref: '#/definitions/taobaoGoodsListResponse'
      security:
        - api_key: []
  /taobao/task/status.json:
    get:
      tags:
        - taobao
      summary: 状态列表
      responses:
        '200':
          description: '[SUCCESS]成功'
          schema:
            $ref: '#/definitions/taobaoRunStautsResponse'
      security:
        - api_key: []
  /taobao/task/run.json:
    get:
      tags:
        - taobao
      summary: 批量导入商品
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
  /taobao/task/doubleElevenRun.json:
    get:
      tags:
        - taobao
      summary: 批量导入双十一商品
      responses:
        '200':
          description: '[SUCCESS]设置成功'
          schema:
            $ref: '#/definitions/ApiResponse'
      security:
        - api_key: []
definitions:
  Depot:
    title: 提货点对象
    description: 提货点对象
    properties:
      id:
        description: 提货点id
        type: string
        example: '1'
      name:
        description: 提货点名称
        type: string
        example: 上海南京东路店
      province:
        description: 省份id
        type: integer
        example: '1'
      city:
        description: 城市
        type: integer
        example: '12'
      district:
        description: 地区
        type: integer
        example: '123'
      address:
        description: 提货点地址
        type: string
        example: 上海南京东路200号
      lnt:
        description: 提货点经度
        type: string
        example: '127.00'
      lat:
        description: 提货点纬度
        type: string
        example: '39.00'
      store_id:
        description: 提货点关联门店id
        type: integer
        example: '12'
      contact_way:
        description: 提货点联系方式
        type: string
        example: 021-651235455
      create_time:
        description: 创建时间
        type: string
        example: '2017-06-18 11:40:25'
      is_open:
        description: 是否开启
        type: boolean
        example: 'true'
      is_app_hidden:
        description: 是否在APP隐藏
        type: boolean
        example: 'true'
    type: object
  ShopCategory:
    title: 店铺分类对象
    description: 店铺分类对象
    properties:
      id:
        description: 店铺分类id
        type: integer
        example: '1'
      name:
        description: 店铺分类名称
        type: string
        example: 男装
      is_delete:
        description: 店铺分类是否已经删除
        type: boolean
        example: 'true'
      order_num:
        description: 店铺分类排序编号
        type: integer
        example: '99'
      pid:
        description: 店铺分类父分类id
        type: integer
        example: '0'
    type: object
  CsGoods:
    title: 便利店商品对象
    description: 便利店商品对象
    properties:
      id:
        description: 商品id
        type: integer
        example: '1'
      title:
        description: 商品标题
        type: string
        example: 法国代购 maje 2016夏季新款女装高圆圆明星同款斑马刺绣连衣裙
      brief:
        description: 商品描述
        type: string
        example: 【厂家直销！】超值抢购中;活动时间有限，量到提价！钱没了可以再赚，衣服卖完下架就没再也没有了！！穿起来很显瘦，也非常百搭，价格低但档次不低，买到的都笑了。美美美！上身超好看短袖棉麻衬衫 百搭 透气吸汗 不起球 不褪色 不挂丝，夏季女神必备衬衫 8天无理由退货，购物无忧
      shop_category_id:
        description: 店铺分类id
        type: integer
        example: '1'
      goods_sn:
        description: 商品编码
        type: string
        example: G20170701215612355
      original_price:
        description: 商品原价
        type: string
        example: '999.99'
      current_price:
        description: 商品现价
        type: string
        example: '199.99'
      is_on_sale:
        description: 是否上架
        type: boolean
        example: 'true'
      extra_goods_sn:
        description: 多个商品编码
        type: string
        example: "Q345/D324"
      covers:
        description: 商品封面图片数组
        type: array
        items:
          required:
            - id
            - img
          properties:
            id:
              description: 图片对象id
              type: integer
            img:
              required:
                - id
                - width
                - url
                - height
              properties:
                id:
                  description: 图片对象id
                  type: string
                  example: '12'
                width:
                  description: 图片宽度
                  type: string
                  example: '800'
                height:
                  description: 图片高度
                  type: string
                  example: '800'
                url:
                  description: 图片地址
                  type: string
                  example: 'http://img.baidu.com'
              type: object
          type: object
      detail:
        description: 商品详情
        type: array
        items:
          required:
            - id
            - width
            - url
            - height
          properties:
            id:
              description: 图片对象id
              type: string
              example: '12'
            width:
              description: 图片宽度
              type: string
              example: '800'
            height:
              description: 图片高度
              type: string
              example: '800'
            url:
              description: 图片地址
              type: string
              example: 'http://img.baidu.com'
          type: object
    type: object
  ofGoods:
      title: 欧飞商品对象
      description: 欧飞商品对象
      properties:
        id:
          description: 商品id
          type: integer
          example: '1'
        title:
          description: 商品标题
          type: string
          example: 手机话费充值10元
        type:
          description: 类型
          type: string
          example: 'phone'
        goods_sn:
          description: 商品编码
          type: string
          example: HF001
        original_price:
          description: 进价
          type: string
          example: '10'
        sub_title:
          description: 面值
          type: integer
          example: '10'
        current_price:
          description: 商品现价
          type: string
          example: '9.96'
        is_on_sale:
          description: 是否上架
          type: boolean
          example: 'true'
      type: object
  Slide:
    title: 幻灯片对象
    description: 幻灯片对象
    properties:
      title:
        description: 幻灯片标题
        type: string
        example: ll
      cover:
        description: 幻灯片 图片地址
        type: string
        example: 'http://img.baidu.com'
      is_show:
        description: 是否显示
        type: boolean
        example: 'true'
      start_time:
        description: 开始轮播时间
        type: string
        example: '2017-09-10'
      end_time:
        description: 结束轮播时间
        type: string
        example: '2017-10-10'
      jump_type:
        description: 跳转类型
        type: string
        example: web
      jump_value:
        description: 跳转值
        type: string
        example: '123'
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      order_number:
        description: 排序
        type: integer
        example: 1
    type: object
  Advert:
    title: 启动屏对象
    description: 启动屏对象
    properties:
      img:
        description: 启动屏 图片地址
        type: string
        example: 'http://img.baidu.com'
      jump_type:
        description: 跳转类型
        type: string
        example: web
      jump_value:
        description: 跳转值
        type: string
        example: 'https://event.mobike.com/mc/?src=group'
      sort:
        description: 展示优先级
        type: integer
        example: 1
      start_time:
        description: 展示开始时间
        type: string
        example: '2017-09-01'
      end_time:
        description: 展示结束时间
        type: string
        example: '2017-10-01'
      options:
        description: 设置勾选
        type: array
        example:
          - 'opt_ios'
          - 'opt_android'
          - 'opt_yes_check_in'
          - 'opt_no_check_in'
          - 'opt_man'
          - 'opt_woman'
          - 'opt_unknow'
    type: object
  EditAdvert:
    title: 启动屏对象
    description: 启动屏对象
    properties:
      id:
        description: 启动屏 ID
        type: integer
        example: 3
      img:
        description: 启动屏 图片地址
        type: string
        example: 'http://img.baidu.com'
      jump_type:
        description: 跳转类型
        type: string
        example: web
      jump_value:
        description: 跳转值
        type: string
        example: 'https://event.mobike.com/mc/?src=group'
      sort:
        description: 展示优先级
        type: integer
        example: 1
      start_time:
        description: 展示开始时间
        type: string
        example: '2017-09-01'
      end_time:
        description: 展示结束时间
        type: string
        example: '2017-10-01'
      options:
        description: 设置勾选
        type: array
        example:
          - 'opt_ios'
          - 'opt_android'
          - 'opt_yes_check_in'
          - 'opt_no_check_in'
          - 'opt_man'
          - 'opt_woman'
          - 'opt_unknow'
    type: object
  IdArray:
    title: 商品id数组
    description: 商品id数组
    properties:
      id_array:
        description: 商品id数组
        type: array
        example:
          - '2'
          - '3'
    type: object
  AppNotice:
    title: app通知
    description: app通知
    properties:
      title:
        description: 幻灯片标题
        type: string
        example: ll
      is_show:
        description: 是否显示
        type: boolean
        example: 'true'
      start_time:
        description: 开始轮播时间
        type: string
        example: '2017-09-10'
      end_time:
        description: 结束轮播时间
        type: string
        example: '2017-10-10'
      jump_type:
        description: 跳转类型
        type: string
        example: web
      jump_value:
        description: 跳转值
        type: string
        example: '123'
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  verify:
    title: 验证订单
    description: 验证订单
    properties:
      order_sn:
        description: 订单号
        type: string
        example: '123'
      number:
        description: 提货码
        type: string
        example: '123'
    type: object
  close:
    title: 验证订单
    description: 验证订单
    properties:
      id:
        description: 订单id
        type: integer
        example: 1
      remark:
        description: 关闭订单理由
        type: string
        example: 关闭订单理由
    type: object
  applyServer:
    title: 售后对象
    description: 售后对象
    properties:
      order_sn:
        description: 订单编号
        type: string
        example: O2017081209291234
      remark:
        description: 售后理由备注
        type: string
        example: 可乐过期了
      type:
        description: 售后原因类型
        type: string
        example: 不想买了
    type: object
  slideListResponse:
    title: 幻灯片列表
    description: 幻灯片列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        properties:
          id:
            type: integer
            description: ID
          title:
            type: string
            description: 标题
          cover:
            type: string
            description: 图片
          start_time:
            type: string
            description: 开始时间
          end_time:
            type: string
            description: 结束时间
          jump_type:
            type: string
            description: 跳转类型
          jump_value:
            type: string
            description: 跳转值
          is_show:
            type: boolean
            description: 是否显示
          order_number:
            type: integer
            description: 排序
        type: object
    type: object
  CategoryList:
    title: 验证订单
    description: 验证订单
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
            name:
              description: name
              type: string
              example: 饼干
            order_num:
              description: order_num
              type: integer
              example: '99'
            is_spread:
              description: is_spread
              type: boolean
            pid:
              description: pid
              type: integer
              example: '99'
            add_time:
              description: add_time
              type: string
              example: '2017-06-28 16:50:32'
            list:
              description: 文章图片
              type: array
              items:
                properties:
                  id:
                    description: ID
                    type: integer
                  name:
                    description: name
                    type: string
                    example: 饼干
                  order_num:
                    description: order_num
                    type: integer
                    example: '99'
                  is_spread:
                    description: is_spread
                    type: boolean
                  pid:
                    description: pid
                    type: integer
                    example: '99'
                  add_time:
                    description: add_time
                    type: string
                    example: '2017-06-28 16:50:32'
                type: object
          type: object
    type: object
  BatchOnsaleRequest:
    title: 批量上架商品
    description: 批量上架商品
    properties:
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      ids:
        description: 商品ID
        type: integer
        example: '1,2,3'
    type: object
  BatchOffsaleRequest:
    title: 批量下架商品
    description: 批量下架商品
    properties:
      depot_id:
        description: 订单号
        type: integer
        example: 1
      ids:
        description: 商品ID
        type: string
        example: '1,2,3'
    type: object
  stockNumResponse:
    title: 获取分类对应数量
    description: 获取分类对应数量
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        properties:
          pause:
            description: 暂停售卖数量
            type: integer
            example: 111
          onsaleNum:
            description: 在售数量
            type: integer
            example: 111
          offsaleNum:
            description: 下架数量
            type: integer
            example: 111
        type: object
    type: object
  pandianRequest:
    title: 盘点商品
    description: 盘点商品
    properties:
      data:
        type: array
        items:
          properties:
            current:
              description: 当前库存
              type: integer
            goods_id:
              description: 商品ID
              type: integer
              example: '1'
            pandian:
              description: 盘点数量
              type: integer
            reason:
              description: 盘点原因
              type: string
          type: object
      depot_id:
        description: 提货点ID
        type: integer
        example: '1'
      shop_category_id:
        description: 商品分类ID
        type: string
        example: '1'
    type: object
  goodDetail:
    title: 商品内容
    description: 商品内容
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
            title:
              description: 商品标题
              type: string
              example: 农夫山泉 饮用天然水 550ml/瓶装
            goods_sn:
              description: 商品唯一编码
              type: string
              example: xxxxxxxx
            original_price:
              description: 市场价格（原价）
              type: integer
            current_price:
              description: 本店售价（现价）
              type: integer
            brief:
              description: 简要描述
              type: string
              example: 千岛湖饮用天然水
            is_delete:
              description: '是否被删除 0: 否 1：是'
              type: boolean
            is_on_sale:
              description: '是否上架 1: 是 0 ：否'
              type: boolean
            is_intro:
              description: 是否推荐
              type: boolean
            covers:
              type: array
              items:
                properties:
                  id:
                    description: ID
                    type: integer
                  img:
                    properties:
                      id:
                        description: ID
                        type: integer
                      url:
                        description: url
                        type: string
                        example: 'http://img.hotwheels.sdxapp.com/goods/f9/87/f9876ef595b9249155b3ff81f12a88c0.jpg'
                      width:
                        description: width
                        type: integer
                        example: '400'
                      height:
                        description: height
                        type: integer
                        example: '400'
                      thumb:
                        description: thumb
                        type: string
                        example: 'http://img.hotwheels.sdxapp.com/goods/f9/87/f9876ef595b9249155b3ff81f12a88c0.jpg'
                    type: object
                type: object
            p_shop_category_id:
              description: 店铺分类父id
              type: integer
            shop_category_id:
              description: 店铺分类id
              type: integer
            add_time:
              description: '2017-03-13 21:27:04'
              type: string
              example: '2017-03-13 21:27:07'
            update_time:
              description: '2017-03-13 21:27:07'
              type: string
              example: '2017-03-13 21:27:07'
            sold_count:
              description: '2017-03-13 21:27:07'
              type: string
              example: '2017-03-13 21:27:07'
            detail:
              type: array
              items:
                properties:
                  url:
                    description: url
                    type: integer
                    example: 'http://s1.axhome.com.cn/goods/21/63/216338ae2df2e33f72a628f21ea51906.jpg'
                  width:
                    description: width
                    type: integer
                    example: '750'
                  height:
                    description: height
                    type: integer
                    example: '1030'
                type: object
          type: object
    type: object
  goodlist:
    title: 获取商品列表
    description: 获取商品列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: 1
            title:
              description: 商品标题
              type: string
              example: 库存积分
            goods_sn:
              description: 商品唯一编码
              type: string
              example: xxxxxxxx
            original_price:
              description: 市场价格（原价）
              type: integer
            current_price:
              description: 本店售价（现价）
              type: integer
            brief:
              description: 简要描述
              type: string
              example: 千岛湖饮用天然水
            is_delete:
              description: '是否被删除 0: 否 1：是'
              type: boolean
            is_on_sale:
              description: '是否上架 1: 是 0 ：否'
              type: boolean
            cover:
              description: 图片
              type: string
              example: 'http://img.hotwheels.sdxapp.com/goods/f9/87/f9876ef595b9249155b3ff81f12a88c0.jpg'
            add_time:
              description: 创建时间
              type: string
              example: '2017-03-13 21:27:04'
            update_time:
              description: 更新时间
              type: string
              example: '2017-03-13 21:27:04'
            sold_count:
              description: 数量
              type: integer
              example: '1'
            is_intro:
              description: 是否推荐
              type: boolean
          type: object
    type: object
  purchaseAdd:
    title: 进货接口
    description: 进货接口
    properties:
      discount_price:
        description: 优惠金额
        type: string
        example: 11
      purchase_sn:
        description: 进货单号
        type: string
        example: gasdfasf
      purchase_time:
        description: 进货时间
        type: string
        example: '2017-08-11'
      total_price:
        description: 进货单总价
        type: string
        example: 1.1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      postage:
        description: 邮费
        type: string
        example: '1.1'
      data:
        type: array
        items:
          properties:
            goods_id:
              description: 商品ID
              type: integer
              example: 1
            num:
              description: 进货数量
              type: integer
              example: 1
            purchase_price:
              description: 进价
              type: string
              example: 1.1
          type: object
    type: object
  ofGoodlist:
    title: 获取商品列表
    description: 获取商品列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: 1
            title:
              description: 商品标题
              type: string
              example: 话费充值
            goods_sn:
              description: 商品唯一编码
              type: string
              example: xxxxxxxx
            original_price:
              description: 市场价格（原价）
              type: integer
            current_price:
              description: 本店售价（现价）
              type: integer
            is_delete:
              description: '是否被删除 0: 否 1：是'
              type: boolean
            is_on_sale:
              description: '是否上架 1: 是 0 ：否'
              type: boolean
            is_intro:
              description: '是否推荐 1: 是 0 ：否'
              type: boolean
            type:
              description: 类型
              type: string
              example: 'Q币充值'
            add_time:
              description: 创建时间
              type: string
              example: '2017-03-13 21:27:04'
            update_time:
              description: 更新时间
              type: string
              example: '2017-03-13 21:27:04'
          type: object
    type: object
  offsale:
    title: 批量下架商品
    description: 批量下架商品
    properties:
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      id:
        description: 商品ID
        type: integer
        example: 1
    type: object
  onsale:
    title: 商品上架到某个提货点
    description: 商品上架到某个提货点
    properties:
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      id:
        description: 商品ID
        type: integer
        example: 1
    type: object
  beginsale:
    title: 开始售卖
    description: 开始售卖
    properties:
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      id:
        description: 商品ID
        type: integer
        example: 1
    type: object
  pausesale:
    title: 暂停售卖
    description: 暂停售卖
    properties:
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      id:
        description: 商品ID
        type: integer
        example: 1
    type: object
  stockList:
    title: 某个提货点某个分类的上架或者没有上架的商品列表
    description: 某个提货点某个分类的上架或者没有上架的商品列表
    properties:
      data:
        type: array
        items:
          properties:
            goods_id:
              description: 商品ID
              type: integer
              example: '1'
            depot_id:
              description: 提货地ID
              type: integer
              example: '1'
            goods_sn:
              description: 商品唯一编码
              type: string
              example: xxxxxxxx
            title:
              description: 标题
              type: string
            current_price:
              description: 官方售价
              type: integer
              example: '16.00'
            depot_price:
              description: 门店售价
              type: integer
              example: '16.00'
            category_name:
              description: 类名
              type: string
              example: 鞋子1
            stock:
              description: 存货
              type: integer
              example: '12'
            order_number:
              description: 商品排序
              type: integer
              example: '12'
            intro_order:
              description: 推荐排序
              type: integer
              example: '12'
            purchase_price:
              description: 进价
              type: string
              example: '12.00'
            avg_price:
              description: 平均价格
              type: string
              example: '12.0000'
            add_stock_num:
              description: 进货数量
              type: integer
              example: '12'
            is_sell:
              description: 是否售卖
              type: boolean
              example: true
            is_official:
              description: 是否是官方售价
              type: boolean
              example: true
          type: object
    type: object
  stockLogs:
    title: 某个提货点某个分类的上架或者没有上架的商品列表
    description: 某个提货点某个分类的上架或者没有上架的商品列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: '1'
            operator:
              description: 角色
              type: string
              example: admin
            content:
              description: 内容
              type: string
              example: xxxxxxxx
            create_time:
              description: 创建时间
              type: string
              example: '2017-07-10 17:38:52'
          type: object
      count:
        description: 数量
        type: integer
        example: 1
    type: object
  getAllOrder:
    title: 订单列表
    description: 订单列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
            order_sn:
              description: 订单号，唯一
              type: string
              example: O201707071116389998
            create_time:
              description: 创建时间
              type: string
              example: '2017-07-06 20:20:08'
            pay_time:
              description: 支付时间
              type: string
              example: '2017-07-06 20:20:08'
            nick_name:
              description: 昵称
              type: string
              example: ax13816249644
            phone:
              description: 电话
              type: integer
              example: '13816249644'
            dispatch_style:
              type: string
              example: 门店自提
            address:
              type: string
              example: '-'
            total_price:
              type: string
              example: ￥0.01
            integral_money:
              type: string
              example: ￥0
            pay_fee:
              type: string
              example: ￥0
            payinfo:
              properties:
                pay_time:
                  description: 支付时间
                  type: string
                  example: '-'
                pay_order_sn:
                  description: 支付订单编号
                  type: string
                  example: '-'
                pay_type:
                  description: 支付方式
                  type: string
                  example: '-'
              type: object
            state_text:
              description: 订单状态
              type: string
              example: 已关闭
            goods_list:
              description: 文章图片
              type: array
              items:
                properties:
                  cover:
                    description: 封面
                    type: string
                    example: 'http://s1.axhome.com.cn/goods/9a/5f/9a5ffc88e7999f6889ac32b8595cf00c.jpg!s200'
                  title:
                    description: 标题
                    type: string
                    example: '亿滋 太平三层高钙梳打饼干(香葱味)100g '
                  original_price:
                    description: 价格
                    type: string
                    example: '3.50'
                  current_price:
                    description: 价格
                    type: string
                    example: '0.01'
                  num:
                    description: 数量
                    type: integer
                    example: '2'
                type: object
            buttons:
              properties:
                prepare:
                  type: boolean
                verify:
                  type: boolean
                finished:
                  type: boolean
                closed:
                  type: boolean
                refund:
                  description: rejected已驳回 applyed待处理 finished已退款 audited已审核 refunding退款中
                  type: string
                  example: rejected
              type: object
            shiping:
              properties:
                delivery_user:
                  description: 发货人
                  type: string
                  example: xx
                prepare_user:
                  description: 配货人
                  type: string
                  example: xx
                prepare_time:
                  description: 配货时间
                  type: string
                  example: '2017-07-20 19:17:20'
                confirm_time:
                  description: 取货时间
                  type: string
                  example: '2017-07-20 19:17:20'
              type: object
            coupon_info:
              properties:
                title:
                  description: 优惠券名称
                  type: string
                  example: xx满减
                has_coupon:
                  description: 是否有优惠券
                  type: boolean
                  example: true
              type: object
            order_refund:
              properties:
                id:
                  description: 退款ID
                  type: integer
                  example: '1'
                remark:
                  description: 退款理由或者驳回原因
                  type: string
                  example: xx
                refund_type:
                  description: 售后原因
                  type: string
                  example: xxxxxxxxx
                refund_remark:
                  description: 详细说明
                  type: string
                  example: xxxxxxxxxxx
                status:
                  description: 状态：已经提交退货 已经审核 正在退货 已经完成 已经驳回
                  type: string
                  example: xx
                refund_money:
                  description: 退款金额
                  type: string
                  example: '100'
                refund_integral:
                  description: 退款积分
                  type: string
                  example: '100'
                refund_coupon:
                  description: 返回优惠券
                  type: string
                  example: true
              type: object
            style:
              type: integer
              example: list
            goods_total_count:
              type: string
              example: '1'
          type: object
      count:
        description: 数量
        type: integer
        example: 1
    type: object
#  newestList:
#    title: 获取新订单列表
#    description: 获取新订单列表
#    properties:
#      data:
#        type: array
#        items:
#          properties:
#            id:
#              description: ID
#              type: integer
#              example: '17'
#            order_sn:
#              description: 订单号，唯一
#              type: string
#              example: O201707071116389998
#            img:
#              description: 图片
#              type: string
#              example: 'http://img.hotwheels.sdxapp.com/goods/80/50/805051a93811590f6f20950416698122.jpg!s200'
#          type: object
#    type: object
  updateIntro:
    title: 商品分类排序更新
    description: 商品分类排序更新
    properties:
      list:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: 1
            order_number:
              description: 排序
              type: integer
              example: 1
          type: object
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  updateCategory:
    title: 商品分类排序更新
    description: 商品分类排序更新
    properties:
      list:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: 1
            order_number:
              description: 排序
              type: integer
              example: 1
          type: object
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  updateJinghuoRequest:
    title: 撤销进货
    description: 撤销进货
    properties:
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      purchase_id:
        description: 进货单ID
        type: integer
        example: 1
      update_info:
        type: array
        items:
          properties:
            goods_depot_purchase_id:
              description: 进货记录ID
              type: integer
              example: 1
            is_replace:
              description: 是否替换商品
              type: boolean
              example: false
            replace_array:
              type: array
              items:
                properties:
                  goods_id:
                    description: 商品ID
                    type: integer
                    example: 1
                  num:
                    description: 进货数量
                    type: integer
                    example: 1
                  purchase_price:
                    description: 进价
                    type: string
                    example: 1
                type: object
          type: object
    type: object
  updateCurrentPrice:
    title: 更新提货点售价
    description: 更新提货点售价
    properties:
      goods_id:
        description: 商品ID
        type: integer
        example: 1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      current_price:
        description: 提货点售价
        type: string
        example: 1.5
    type: object
  deleteCurrentPrice:
    title: 同步官方价
    description: 同步官方价
    properties:
      goods_id:
        description: 商品ID
        type: integer
        example: 1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  adddelivers:
    title: 设置提货点的配送费 和满多少免配送费
    description: 设置提货点的配送费 和满多少免配送费
    properties:
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      transport_fee:
        description: 配送费
        type: string
        example: 1
      free_delivery_fee:
        description: 免配送费金额
        type: string
        example: 99
    type: object
  addcourier:
    title: 添加配送员
    description: 添加配送员
    properties:
      id:
        description: 配送员ID
        type: integer
        example: 1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      phone:
        description: 电话号码
        type: string
        example: 1
      name:
        description: 配送员名称
        type: string
        example: 99
      bank:
        description: 开户行
        type: string
        example: '工商银行'
      bank_card:
        description: 银行号码
        type: string
        example: 313131321
      id_card:
       description: 身份证号码
       type: string
       example: 3213135166
    type: object
  courierList:
    title: 配送员列表
    description: 配送员列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: 配送员ID
              type: integer
            name:
              description: 配送员名称
              type: string
              example: 作者
            phone:
              description: 配送员电话号码
              type: string
              example: '17765433254'
            bank:
              description: 开户行
              type: string
              example: '工商银行'
            bank_card:
              description: 银行号码
              type: string
              example: 313131321
            id_card:
             description: 身份证号码
             type: string
             example: 3213135166
          type: object
    type: object
  addIntro:
    title: 添加售后推荐商品
    description: 添加售后推荐商品
    properties:
      id:
        description: 商品ID
        type: integer
        example: 1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  IntroList:
    title: 售后推荐商品列表
    description: 售后推荐商品列表
    properties:
      data:
        type: array
        items:
          properties:
            id:
              description: 商品ID
              type: integer
            title:
              description: 商品名
              type: string
              example: 沙发
            number:
              description: 排序
              type: integer
              example: '99'
          type: object
    type: object
  deleteIntro:
    title: 删除售后推荐商品
    description: 删除售后推荐商品
    properties:
      id:
        description: 商品ID
        type: integer
        example: 1
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  sortIntro:
    title: 商品分类排序更新
    description: 商品分类排序更新
    properties:
      list:
        type: array
        items:
          properties:
            id:
              description: ID
              type: integer
              example: 1
            order_number:
              description: 排序
              type: integer
              example: 1
          type: object
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
    type: object
  refundList:
    title: 退款列表
    description: 退款列表
    properties:
      id:
        description: 退款id
        type: integer
        example: '1'
      goods_list:
        description: 商品列表
        type: array
        items:
          required:
            - id
            - cover
            - title
            - original_price
            - current_price
            - num
          properties:
            id:
              description: 商品id
              type: integer
            cover:
              description: 封面图片地址
              type: string
            title:
              description: 商品标题
              type: string
            original_price:
              description: 商品原价
              type: string
            current_price:
              description: 商品现价
              type: string
            num:
              description: 商品购买数量
              type: string
          type: object
      first:
        description: 列表页首个商品列表
        required:
          - cover
          - title
          - original_price
          - current_price
          - num
        properties:
          cover:
            description: 封面图片地址
            type: string
          title:
            description: 商品标题
            type: string
          original_price:
            description: 商品原价
            type: string
          current_price:
            description: 商品现价
            type: string
          num:
            description: 商品购买数量
            type: string
        type: object
      order_sn:
        description: 订单号
        type: string
        example: 订单号
      total_fee:
        description: 订单金额
        type: string
        example: 订单金额
      nick_name:
        description: 用户昵称
        type: string
        example: 用户昵称
      add_time:
        description: 申请时间
        type: string
        example: '2017-03-05 12:00:00'
      status:
        description: 退款状态
        type: string
        example: 退款状态
    type: object
  detailRefund:
    title: 退款详情
    description: 退款详情
    properties:
      id:
        description: 退款id
        type: integer
        example: '1'
      goods_list:
        description: 商品列表
        type: array
        items:
          required:
            - id
            - cover
            - title
            - original_price
            - current_price
            - num
          properties:
            id:
              description: 商品id
              type: integer
            cover:
              description: 封面图片地址
              type: string
            title:
              description: 商品标题
              type: string
            original_price:
              description: 商品原价
              type: string
            current_price:
              description: 商品现价
              type: string
            num:
              description: 商品购买数量
              type: string
          type: object
      total_fee:
        description: 订单金额
        type: integer
        example: 120
      pay_fee:
        description: 支付金额
        type: integer
        example: 120
      pay_type:
        description: 支付方式
        type: string
        example: 支付宝
      add_time:
        description: 支付时间
        type: string
        example: '2017-03-05 12:00:00'
      out_trade_no:
        description: 支付单号
        type: string
        example: P201707181456291707
      coupon_title:
        description: 优惠券名称
        type: string
        example: 'XX优惠券'
      has_coupon:
        description: 是否有优惠券
        type: boolean
        example: true
      nick_name:
        description: 用户
        type: string
        example: 用户昵称
      phone:
        description: 电话
        type: string
        example: '158744585858'
      refund_type:
        description: 申请原因
        type: string
        example: 拍多了
      refund_remark:
        description: 客人详细说明
        type: string
        example: 不想买，质量不好
      remark:
        description: 门店退款理由
        type: string
        example: 门店退款理由
      status:
        description: 退款状态描述
        type: string
        example: 已退款
      integral:
        description: 使用积分
        type: integer
        example: '1100'
      integral_money:
        description: 积分抵扣金额
        type: integer
        example: '11'
    type: object
  agree:
    title: 同意退款
    description: 同意退款
    properties:
      id:
        description: 退款id
        type: integer
        example: '1'
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      refund_money:
        description: 退款金额
        type: integer
        example: '100'
      refund_integral:
        description: 退款积分
        type: integer
        example: 1000
      reason:
        description: 商家同意退款理由
        type: string
        example: 同意
      refund_goods:
        description: 返回库存商品
        type: array
        items:
          required:
            - id
            - count
          properties:
            id:
              description: 商品id
              type: integer
              example: 1
            count:
              description: 商品数量
              type: integer
              example: 2
          type: object
    type: object
  reject:
    title: 拒绝退款
    description: 拒绝退款
    properties:
      id:
        description: 退款id
        type: integer
        example: '1'
      depot_id:
        description: 提货点id
        type: integer
        example: 1
      reason:
        description: 商家同意退款理由
        type: string
        example: 同意
    type: object
  logList:
    title: 退款记录列表
    description: 退款记录列表
    properties:
      group:
        description: 分组
        type: integer
        example: '1'
      operator_name:
        description: 管理员
        type: string
        example: 管理员
      content:
        description: 内容
        type: string
        example: 内容
      create_time:
        description: 时间
        type: string
        example: '2017-05-06'
    type: object
  get:
    title: 拒绝退款记录列表插叙条件
    description: 拒绝退款记录列表插叙条件
    properties:
      page:
        description: 页码
        type: integer
        example: 1
      size:
        description: 条数
        type: integer
        example: 10
    type: object
  report:
    title: 利润报表
    description: 利润报表
    properties:
      store_name:
        description: 门店
        type: string
        example: 安心总部
      order_num:
        description: 订单数量
        type: string
        example: '2'
      order_of_people:
        description: 下单人数
        type: string
        example: '2'
      avg_price:
        description: 商品进价
        type: integer
        example: '100'
      current_price:
        description: 商品售价
        type: integer
        example: '90'
      total_fee:
        description: 实际支付
        type: integer
        example: '1000'
      integral:
        description: 使用积分
        type: integer
        example: '1000'
      refund_money:
        description: 售后损耗金额
        type: integer
        example: '10'
      refund_integral:
        description: 售后损耗积分
        type: integer
        example: '200'
      day:
        description: 时间
        type: string
        example: 2017.02.03
      check_loss:
        description: 盘库损耗
        type: string
        example: '20'
      gross_profit:
        description: 毛利润
        type: string
        example: '201'
      net_profit:
        description: 净利润
        type: string
        example: '202'
    type: object
  store:
    title: 门店列表
    description: 门店列表
    properties:
      id:
        description: 提货点id
        type: integer
        example: 1
      name:
        description: 门店名称
        type: string
        example: 安歆总部店
    type: object
  purchase:
    title: 进货报表
    description: 进货报表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - day
            - store_name
            - category_name
            - title
            - purchase_price
            - current_price
            - add_stock
          properties:
            day:
              description: 日期
              type: integer
              example: 1
            store_name:
              description: 门店名称
              type: string
              example:
                安歆总部店
            category_name:
              description: 分类名称
              type: string
              example:
                分类名称
            title:
              description: 商品名称
              type: string
              example:
                商品名称
            purchase_price:
              description: 商品进价
              type: string
              example:
                100
            current_price:
              description: 商品售价
              type: string
              example:
                120
            add_stock:
              description: 进货数量
              type: string
              example:
                130
          type: object
      count:
        description: 数量
        type: integer
        example:
          20
    type: object
  sales:
    title: 门店销量报表
    description: 门店销量报表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - day
            - store_name
            - title
            - num
          properties:
            day:
              description: 日期
              type: integer
              example: 1
            store_name:
              description: 门店名称
              type: string
              example:
                安歆总部店
            title:
              description: 商品名称
              type: string
              example:
                商品名称
            num:
              description: 销量
              type: string
              example:
                100
          type: object
    type: object
  editQrcode:
    title: 创建二维码
    description: 创建二维码
    properties:
      title:
        description: 活动名称
        type: string
        example: aaaaaaaaaaaaaaa
      banner_img:
        description: banner图片
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxx
      rule:
        description: 规则
        type: string
        example: afasfasfs
    type: object
  createQrcode:
    title: 创建二维码
    description: 创建二维码
    properties:
      type:
        description: batch:批量 single:单独 random:随机
        type: string
        example: batch
      title:
        description: 活动名称
        type: string
        example: aaaaaaaaaaaaaaa
      banner_img:
        description: banner图片
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxx
      stock:
        description: 数量
        type: integer
        example: '1'
      company:
        description: 发放单位
        type: string
        example: safasfasf
      integral:
        description: 积分数量
        type: integer
        example: 1000
      remark:
        description: 备注
        type: string
        example: asfasfsaf
      rule:
        description: 规则
        type: string
        example: afasfasfs
      start_day:
        description: 扫码有效开始时间
        type: string
        example: '2017-05-06 12:20:20'
      end_day:
        description: 扫码有效结束时间
        type: string
        example: '2017-06-06'
    type: object
  addSay:
    title: 写入文章
    description: 写入文章
    properties:
      imgs:
        description: 图片地址
        type: array
        example:
          - 'http://www.xx.com/xxx.jpg'
          - 'http://www.zz.com/zzz.jpg'
      quan_id:
        description: 圈ID
        type: integer
        example: '1'
      text:
        description: 文章内容
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxx
      user_id:
        description: 用户ID
        type: integer
        example: '1'
    type: object
  updateAvgSales:
    title: 更新单月均值报表的门店床位数
    description: 更新单月均值报表的门店床位数
    properties:
      store_id:
        description: 门店id
        type: integer
        example: 1
      day:
        description: 日期
        type: string
        example: '2017-11-22'
      total_bed:
        description: 门店总床位数
        type: integer
        example: '1'
      rental_bed:
        description: 出租床位数
        type: integer
        example: 2
      checkin_bed:
        description: 实际入住人数
        type: integer
        example: '1'
    type: object
  popupAdd:
    title: 添加弹窗
    description: 添加弹窗
    properties:
      brief:
        description: 简介
        type: string
        example: fsaddfsasd
      content:
        description: 内容
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxx
    type: object
  updateSay:
    title: 修改文章
    description: 修改文章
    properties:
      id:
        description: 文章ID
        type: integer
        example: '1'
      imgs:
        description: 图片地址
        type: array
        example:
          - 'http://www.xx.com/xxx.jpg'
          - 'http://www.zz.com/zzz.jpg'
      quan_id:
        description: 圈ID
        type: integer
        example: '1'
      text:
        description: 文章内容
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxx
    type: object
  getAllResponses:
    title: 获取评论列表
    description: 获取评论列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - say_id
            - nickname
            - face_img
            - text
            - imgs
            - views
            - praise_num
            - comment_num
            - create_time
          properties:
            say_id:
              description: 文章ID
              type: integer
            nickname:
              description: 用户昵称
              type: string
              example: adddd
            face_img:
              description: 用户头像
              type: string
              example: 'http://www.xxx.com/2.jpg'
            new_text:
              description: 过滤后的文章文字内容
              type: string
            before_text:
              description: 未过滤的文章文字内容
              type: string
            imgs:
              description: 文章图片
              type: array
              items:
                properties:
                  img:
                    description: 图片地址
                    type: string
                    example: 'http://www.xxx.com/1.jpg'
                  thumb:
                    description: 压缩图片地址
                    type: string
                    example: 'http://www.xxx.com/2.jpg'
                type: object
            is_deleted:
              description: 是否隐藏
              type: boolean
            is_audited:
              description: 是否审核
              type: boolean
            views:
              description: 文章阅读次数
              type: integer
            praise_num:
              description: 文章点赞次数
              type: integer
            comment_num:
              description: 文章评论数
              type: integer
            create_time:
              description: 文章创建时间
              type: time
              example: '2017-05-15 19:12:08'
            is_hide:
              description: 是否在首页推荐隐藏
              type: boolean
            is_recommend:
              description: 是否在首页推荐
              type: boolean
          type: object
      count:
        description: 数量
        type: integer
        example: '100'
    type: object
  getAllQuan:
    title: 圈列表
    description: 圈列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - id
            - name
            - create_time
            - is_open
          properties:
            id:
              description: 圈ID
              type: integer
            name:
              description: 圈名
              type: string
            create_time:
              description: 创建时间
              type: string
              example: '2017-06-01 12:00:00'
            is_open:
              description: 是否开放
              type: boolean
            description:
              description: 描述
              type: string
          type: object
      count:
        description: 总数
        type: integer
        example: '10'
    type: object
  advertGetAll:
    title: 启动屏列表
    description: 启动屏列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - id
            - img
            - jump_type
            - jump_value
            - start_time
            - end_time
            - sort
            - options
            - update_time
            - add_time
          properties:
            id:
              description: 启动屏ID
              type: integer
            img:
              description: 图片地址
              type: string
            jump_type:
              description: 跳转类型
              type: string
              example: '商品'
            jump_value:
              description: 跳转地址
              type: string
            start_time:
              description: 起始日期
              type: string
            end_time:
              description: 结束日期
              type: string
            sort:
              description: 排序
              type: string
            options:
              description: 设置勾选
              type: array
                - 'opt_ios'
                - 'opt_android'
                - 'opt_man'
                - 'opt_women'
                - 'opt_unknow'
                - 'opt_yes_check_in'
                - 'opt_no_check_in'
            update_time:
              description: 更新时间
              type: string
            add_time:
              description: 添加时间
              type: string
          type: object
      count:
        description: 总数
        type: integer
        example: '10'
    type: object
  addComment:
    title: 写入评论
    description: 写入评论
    properties:
      content:
        description: 评论内容
        type: string
        example: xxxxxxxxxxxxxxxx
      say_id:
        description: 文章ID
        type: integer
        example: '1'
      user_id:
        description: 用户ID
        type: integer
        example: '1'
    type: object
  updateSayPraise:
    title: 修改点赞数
    description: 修改点赞数
    properties:
      praise_num:
        description: 点赞数
        type: integer
        example: '100'
      id:
        description: 文章ID
        type: integer
        example: '1'
    type: object
  updateQuan:
    title: 修改圈
    description: 修改圈
    properties:
      name:
        description: 圈名
        type: string
        example: 乐活圈
      id:
        description: 圈ID
        type: integer
        example: '1'
      description:
        description: 描述
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxx
    type: object
  saydetailResponses:
    title: 文章内容
    description: 文章内容
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        properties:
          say_id:
            description: 文章ID
            type: integer
          nickname:
            description: 用户昵称
            type: string
          face_img:
            description: 评论用户头像
            type: string
            example: 'http://www.xxx.com/2.jpg'
          new_text:
            description: 过滤后的文章文字内容
            type: string
            example: addd
          before_text:
            description: 过滤前的文章文字内容
            type: string
            example: addd
          imgs:
            description: 文章图片
            type: array
            items:
              properties:
                img:
                  description: 图片地址
                  type: string
                  example: 'http://www.xxx.com/1.jpg'
                thumb:
                  description: 压缩图片地址
                  type: string
                  example: 'http://www.xxx.com/2.jpg'
              type: object
          views:
            description: 文章阅读次数
            type: integer
          praise_num:
            description: 文章点赞次数
            type: integer
          comment_num:
            description: 文章评论数
            type: integer
          create_time:
            description: 文章创建时间
            type: string
            example: '2014-05-15 19:12:20'
          comment:
            type: array
            items:
              properties:
                comment_id:
                  description: 评论ID
                  type: integer
                content:
                  description: 评论内容
                  type: string
                  example: xxxxxxxxxxxx
                create_time:
                  description: 评论创建时间
                  type: string
                  example: '2014-05-15 19:12:20'
                praise_num:
                  description: 点赞数量
                  type: integer
                face_img:
                  description: 评论用户头像
                  type: string
                  example: 'http://www.xxx.com/2.jpg'
                nickname:
                  description: 评论用户昵称
                  type: string
                  example: addd
              type: object
        type: object
    type: object
  Commentlist:
    title: 评论列表
    description: 评论列表
    properties:
      page:
        description: 页码
        type: integer
        example: '1'
      say_id:
        description: 文章ID
        type: integer
        example: '1'
    type: object
  CommentListResponses:
    title: 获取评论列表
    description: 获取评论列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            comment_id:
              description: 评论ID
              type: integer
            new_content:
              description: 过滤后的评论内容
              type: string
              example: xxxxxxxxxxxx
            before_content:
              description: 过滤前的评论内容
              type: string
              example: xxxxxxxxxxxx
            create_time:
              description: 评论创建时间
              type: string
              example: '2017-05-15 19:12:30'
            praise_num:
              description: 点赞数量
              type: integer
            face_img:
              description: 评论用户头像
              type: string
              example: 'http://www.xxx.com/2.jpg'
            nickname:
              description: 评论用户昵称
              type: string
              example: addd
            is_deleted:
              description: 是否删除
              type: boolean
            is_audited:
              description: 是否审核
              type: boolean
          type: object
      count:
        description: 总数
        type: integer
        example: '1000'
    type: object
  tempSet:
    title: 评论列表
    description: 评论列表
    properties:
      depot_id:
        description: 提货点ID
        example: 1
        type: integer
      id:
        description: 商品ID
        example: 1
        type: integer
      num:
        description: 进货数量
        example: 1
        type: integer
      purchase_price:
        description: 进货价格
        example: 1.1
        type: string
      current_price:
        description: 售价
        example: 1.1
        type: string
      title:
        description: 商品名称
        example: 111
        type: string
      postage:
        description: 邮费分摊金额
        example: 1.1
        type: string
      discount_price:
        description: 优惠分摊金额
        example: 1.1
        type: string
      total_price:
        description: 总金额
        example: 1.1
        type: string
    type: object
  OperatorList:
    title: 管理员用户的关联列表
    description: 管理员用户的关联列表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: 评论ID
              type: integer
              example: '1'
            user_id:
              description: 用户ID
              type: integer
              example: '1'
            ncik_name:
              description: 用户昵称
              type: string
              example: xxxxxxxxxxxxxxx
            face_img:
              description: 用户头像
              type: string
              example: 'http://www.aaa.com/1.jpg'
            operator_id:
              description: 管理员ID
              type: integer
              example: '10'
          type: object
    type: object
  addOperator:
    title: 管理员添加伪装用户
    description: 管理员添加伪装用户
    properties:
      nick_name:
        description: 昵称
        type: string
        example: Tim
      face_img:
        description: 头像
        type: string
        example: 'http://www.aaa.com/1.jpg'
      user_name:
        description: 用户名
        type: string
        example: Tim
    type: object
  addQuan:
    title: 增加圈
    description: 增加圈
    properties:
      name:
        description: 圈名
        type: string
        example: Tim
      description:
        description: 描述
        type: string
        example: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    type: object
  transmitsCouponList:
    title: 获取有库存的优惠券列表
    description: 获取有库存的优惠券列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: id
              type: integer
              example: 1
            title:
              description: 内容
              type: string
              example: '优惠券'
            surplus_num:
              description: 剩余数量
              type: integer
              example: 2000
          type: object
    type: object
  CouponList:
    title: 优惠券列表
    description: 优惠券列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: 1
      data:
        type: array
        items:
          properties:
            id:
              description: id
              type: integer
              example: 1
            type:
              description: 优惠券类型
              type: string
              example: '满减券'
            title:
              description: 内容
              type: string
              example: '优惠券'
            expiry_date:
              description: 有效期
              type: string
              example: '发放后30天有效'
            limit:
              description: 限制
              type: string
              example: '无限制'
            send_num:
              description: 发放数
              type: integer
              example: 1000
            use_num:
              description: 用户使用数量
              type: integer
              example: 1
            stock:
              description: 总数
              type: integer
              example: 2000
            surplus_num:
              description: 剩余数量
              type: integer
              example: 2000
            status:
              description: 状态
              type: string
              example: '正常'
            limit_brief:
              description: 限制语句
              type: string
              example: '正常'
            price:
              description: 优惠券金额
              type: string
              example: 1.1
            limit_price:
              description: 优惠券限制金额
              type: string
              example: 1.1
            depot_brief:
              description: 门店限制
              type: string
              example: 1.1
            operator:
              description: 操作人
              type: string
              example: 杨毅
            create_time:
              description: 创建时间
              type: string
              example: '2017-01-02 12:12:12'
          type: object
    type: object
  numberOfPeople:
    title: 计算符合条件总人数
    description: 计算符合条件总人数
    properties:
      object:
        description: 发放对象 all:全部客人 checkin:入住客人 uncheckin:未入住客人
        type: string
        example: all
      checkin_type:
        description: 入住类型 all:全部 single:散客 team:团队 framework:框架
        type: string
        example: all
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      login_rate:
        description: 登录频次 3:3天未登录 7:7天未登录 15:15天未登录 30:30天未登录
        type: integer
        example: 3
      buy_rate:
        description: 消费频次 3:3天未消费 7:7天未消费 15:15天未消费 30:30天未消费
        type: integer
        example: 3
    type: object
  addCoupon:
    title: 发送特殊优惠券
    description: 发送特殊优惠券
    properties:
      coupon_base_id:
        description: 优惠券ID
        type: integer
        example: 1
      start_time:
        description: 开始时间
        type: string
        example: "2017-09-03"
      end_time:
        description: 结束时间
        type: string
        example: "2017-09-10"
    type: object
  sendCoupon:
    title: 发送优惠券
    description: 发送优惠券
    properties:
      coupon_base_id:
        description: 优惠券ID
        type: integer
        example: 1
      is_jump_duplicate:
        description: 是否去重
        type: boolean
        example: false
      number:
        description: 人数
        type: integer
        example: 1000
      send_time:
        description: 发送时间
        type: string
        example: '2015-01-02 12:05:50'
      type:
        description: 发放对象 all:全部客人 checkin:入住客人 uncheckin:未入住客人 batch:批量发送
        type: string
        example: all
      type_option:
        description: 发放类型详细数据
        type: object
        example: {
                   "all": {
                     "number": 100,
                   },
                   "checkin": {
                     "check_in_type": "team",
                     "depot_id": 1,
                     "choice": "cost_rate",
                     "times": 0,
                     "number": 100
                   },
                   "uncheckin": {
                     "choice": "cost_rate",
                     "times": 0,
                     "number": 100
                   },
                   "appoint": {
                     "phone": "13916963863",
                     "count":1,
                     "number": 100,
                   },
                   "batch": {
                     "phone_list": [
                       "13112345678",
                       "13112345671",
                       "13112345672",
                       "13112345673"
                     ],
                     "number": 100
                   }
                 }
  sendCouponByPhone:
    title: 发送优惠券(手机号码)
    description: 发送优惠券(手机号码)
    properties:
      coupon_base_id:
        description: 优惠券ID
        type: integer
        example: 1
      phone:
        description: 用户电话
        type: integer
        example: 18173227655
      is_duplicate_removal:
        description: 是否去重
        type: boolean
        example: false
      send_time:
        description: 发送时间
        type: string
        example: '2015-01-02 12:05:50'
    type: object
  scanPay:
    title: 扫码支付
    description: 扫码支付
    properties:
      auth_code:
        description: 支付单号
        type: integer
        example: 18173227655
      pay_type:
        description: 支付类型
        type: string
        example: alipay
      order_sn:
        description: 订单单号
        type: string
        example: O984165161
    type: object
  GoodsDetail:
    title: 通过商品编码找商品
    description: 通过商品编码找商品
    properties:
      code:
        type: string
        example: SUCCESS
      message:
        type: string
        example: SUCCESS
      data:
        properties:
          goods_id:
            description: 商品ID
            type: string
            example: C56161616
          title:
            description: 商品名称
            type: string
            example: 矿泉水
          goods_sn:
            description: 商品序号
            type: string
            example: G61465161651
        type: object
    type: object
  createCsOrder:
    title: 后台创建订单
    description: 后台创建订单
    properties:
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      buy_info:
        description: 购买信息
        type: array
        items:
          properties:
            id:
              description: 商品ID
              type: integer
              example: 1
            num:
              description: 购买数量
              type: integer
              example: 1
          type: object
    type: object
  integralCollectResponse:
    title: 积分汇总报表
    description: 积分汇总报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017-05-06'
          get:
            type: integer
            description: 发放积分总数
            example: 1
          get_of_people:
            description: 发放人数
            type: integer
            example: 1
          use:
            description: 使用积分总数
            type: integer
            example: 1
          use_of_people:
            description: 使用人数
            type: integer
            example: 1
          yibai:
            description: 积分数量小于100的人数
            type: integer
            example: 1000
          yibai_liangbai:
            description: 积分数量大于100小于200的人数
            type: integer
            example: 1000
          liangbai_liubai:
            description: 积分数量大于200小于600的人数
            type: integer
            example: 1000
          liubai:
            description: 积分数量大600的人数
            type: integer
            example: 1000
          has_integral:
            description: 持有积分的用户数
            type: integer
            example: 1000
          has_integral_total:
            description: 持有积分总数
            type: integer
            example: 1000
          max_integral:
            description: 单人最高积分数
            type: integer
            example: 1000
        type: object
    type: object
  integralCostResponse:
    title: 积分使用情况表
    description: 积分使用情况表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: '50'
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017-05-06'
          total:
            type: integer
            description: 使用积分总数
            example: 1
          people:
            description: 使用人数
            type: integer
            example: 1
          cost_goods:
            description: 消费
            type: integer
            example: 1
          luck_draw:
            description: 转盘抽奖
            type: integer
            example: 1
          guessing_cost:
            description: 积分竞猜
            type: integer
            example: 1000
          refund:
            description: 退款扣积分
            type: integer
            example: 1000
        type: object
    type: object
  integralCostChart:
    title: 积分使用情况表图表
    description: 积分使用情况表图表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - list
            - data_time
          properties:
            list:
              description: 使用积分数据
              type: array
              items:
                required:
                  - name
                  - data
                properties:
                  name:
                    description: 折线名称
                    type: string
                    example: '总计'
                  data:
                    description: 数据
                    type: array
                    example:
                      - '1'
                      - '2'
            data_time:
              description: X时间轴
              type: array
              example:
                - '2017-12-09'
                - '2017-12-10'
          type: object
    type: object
  integralSendChart:
    title: 积分发送情况表图表
    description: 积分发送情况表图表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - list
            - data_time
          properties:
            list:
              description: 发送积分数据
              type: array
              items:
                required:
                  - name
                  - data
                properties:
                  name:
                    description: 折线名称
                    type: string
                    example: '总计'
                  data:
                    description: 数据
                    type: array
                    example:
                      - '1'
                      - '2'
            data_time:
              description: X时间轴
              type: array
              example:
                - '2017-12-09'
                - '2017-12-10'
          type: object
    type: object
  integralSendResponse:
    title: 积分发放情况表
    description: 积分发放情况表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017-05-06'
          total:
            type: integer
            description: 发放积分总数
            example: 1
          people:
            description: 发放人数
            type: integer
            example: 1
          checkin:
            description: 签到
            type: integer
            example: 1
          shop_cost:
            description: 购物
            type: integer
            example: 1
          cost_refund:
            description: 退回积分
            type: integer
            example: 1
          luck_draw_get:
            description: 转盘抽奖
            type: integer
            example: 1000
          guessing_get:
            description: 积分竞猜
            type: integer
            example: 1000
          special_offer:
            description: 每日特惠任务
            type: integer
            example: 1000
          login:
            description: 首次登录
            type: integer
            example: 1000
          upload_face_img:
            description: 首次上传头像
            type: integer
            example: 1000
          first_cost:
            description: 首次消费
            type: integer
            example: 1000
          send:
            description: 后台发放
            type: integer
            example: 1000
          scan_get:
            description: 扫码
            type: integer
            example: 1000
          all_cost:
            description: 缴费达人
            type: integer
            example: 1000
        type: object
    type: object
  couponResponse:
    title: 优惠券统计表
    description: 优惠券统计表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017-05-06'
          send_coupon_num:
            type: integer
            description: 优惠券发放总数
            example: 1
          use_coupon_num:
            description: 优惠券使用总数
            type: integer
            example: 1
          overdue_coupon:
            description: 优惠券过期总数
            type: integer
            example: 1
          refund_coupon_num:
            description: 优惠券退回总数
            type: integer
            example: 1
          order_num:
            description: 订单数
            type: integer
            example: 1
          total_fee:
            description: 订单金额
            type: integer
            example: 1000
          coupon_fee:
            description: 优惠金额
            type: integer
            example: 1000
          integral:
            description: 使用积分
            type: integer
            example: 1000
          pay_fee:
            description: 实际支付
            type: integer
            example: 1000
          avg_price:
            description: 商品进价
            type: integer
            example: 1000
          refund_money:
            description: 退款金额
            type: integer
            example: 1000
          gross_profit_integral:
            description: 毛利润（含积分）
            type: integer
            example: 1000
          gross_profit:
            description: 毛利润（不含积分）
            type: integer
            example: 1000
        type: object
    type: object
  businessProfitWeeklyResponse:
    title: 营业情况汇总（周/月）表
    description: 营业情况汇总（周/月）表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: string
        example: '20'
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2018/01/01 ~ 2018-01-07（2018年1月）'
          depot_name:
            type: string
            description: 便利店
            example: '总部店'
          order_of_people:
            type: integer
            description: 下单人数
            example: 1
          order_num:
            type: integer
            description: 订单数量
            example: 1
          total_fee:
            description: 订单金额
            type: integer
            example: 1
          total_avg_price:
            description: 商品进价
            type: integer
            example: 1
          increase_money_percent:
            description: 金额增长比例
            type: integer
            example: 1
          integral:
            description: 使用积分
            type: integer
            example: 1
          coupon_fee:
            description: 优惠券抵扣
            type: integer
            example: 1
          pay_fee:
            description: 实际支付
            type: integer
            example: 1000
          max_total_fee:
            description: 单笔金额最高
            type: integer
            example: 1000
          wastage_count:
            description: 盘点次数
            type: integer
            example: 1000
          check_loss:
            description: 盘点损耗
            type: integer
            example: 1000
          refund_wastage_money:
            description: 退货损耗
            type: integer
            example: 1000
          wastage_rate:
            description: 损耗率
            type: integer
            example: 1000
          refund_money:
            description: 退款金额
            type: integer
            example: 1000
          refund_integral:
            description: 退货积分
            type: integer
            example: 1000
          net_profit_integral:
            description: 净利润（含积分）
            type: integer
            example: 1000
          net_profit:
            description: 净利润（不含积分）
            type: integer
            example: 1000
          net_rate:
            description: 净利率
            type: integer
            example: 1000
        type: object
    type: object
  businessProfitResponse:
    title: 营业情况汇总（周/月）表
    description: 营业情况汇总（周/月）表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        properties:
          depot_name:
            type: string
            description: 便利店
            example: '总部店'
          order_of_people:
            type: integer
            description: 下单人数
            example: 1
          order_num:
            type: integer
            description: 订单数量
            example: 1
          total_fee:
            description: 订单金额
            type: integer
            example: 1
          total_avg_price:
            description: 商品进价
            type: integer
            example: 1
          increase_money_percent:
            description: 金额增长比例
            type: integer
            example: 1
          integral:
            description: 使用积分
            type: integer
            example: 1
          coupon_fee:
            description: 优惠券抵扣
            type: integer
            example: 1
          pay_fee:
            description: 实际支付
            type: integer
            example: 1000
          max_total_fee:
            description: 单笔金额最高
            type: integer
            example: 1000
          wastage_count:
            description: 盘点次数
            type: integer
            example: 1000
          check_loss:
            description: 盘点损耗
            type: integer
            example: 1000
          refund_wastage_money:
            description: 退货损耗
            type: integer
            example: 1000
          wastage_rate:
            description: 损耗率
            type: integer
            example: 1000
          refund_money:
            description: 退款金额
            type: integer
            example: 1000
          refund_integral:
            description: 退货积分
            type: integer
            example: 1000
          net_profit_integral:
            description: 净利润（含积分）
            type: integer
            example: 1000
          net_profit:
            description: 净利润（不含积分）
            type: integer
            example: 1000
          net_rate:
            description: 净利率
            type: integer
            example: 1000
        type: object
    type: object
  ofRechargeResponse:
    title: 欧飞充值报表
    description: 欧飞充值报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          pay_time:
            type: string
            description:  交易时间
            example: '2017-05-06'
          order_sn:
            type: string
            description: 系统订单号
            example: '5589662596'
          trade_no:
            description: 支付订单号
            type: string
            example: '333333'
          out_trade_no:
            description: 欧飞订单号
            type: string
            example: 'AX20177854898255555'
          title:
            description: 商品名称
            type: string
            example: '100元充值'
          game_userid:
            description: 充值账号
            type: string
            example: '1254897587'
          sub_title:
            description: 面值
            type: integer
            example: 1000
          original_price:
            description: 采购价
            type: integer
            example: 1000
          current_price:
            description: 销售价
            type: integer
            example: 1000
          total_fee:
            description: 总金额
            type: integer
            example: 1000
          refund_money:
            description: 退款金额
            type: integer
            example: 1000
          status:
            description: 退款状态
            type: string
            example: '--'
          pay_type:
            description: 支付方式
            type: string
            example: '支付宝'
          fee:
            description: 手续费
            type: string
            example: '1'
        type: object
    type: object
  integralSendChartResponse:
    title: 积分发放情况表(图表)
    description: 积分发放情况表(图表)
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - name
            - data
          properties:
            name:
              description: 发送积分类型名称
              type: string
              example: '发放积分总数'
            data:
              description: 30天的数据
              type: array
              example:
                - 22
                - 33
          type: object
    type: object
  dailyRefund:
    title: 退货汇总日报表
    description: 退货汇总日报表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - day
            - refund_count
            - refund_money
            - refund_integral
            - refund_wastage_money
            - max_number_title
            - max_money_depot_name
          properties:
            depot_name:
              description: 日期
              type: string
              example: '2017年9月10日'
            refund_count:
              description: 退货商品总数
              type: integer
              example: 1
            refund_money:
              description: 退款金额
              type: integer
              example: 2.9
            refund_integral:
              description: 退货总积分
              type: integer
              example: 100
            refund_wastage_money:
              description: 退货损耗金额
              type: integer
              example: 10
            max_number_title:
              description: 数量最多商品
              type: string
              example: '啤酒'
            max_money_depot_name:
              description: 金额最高门店
              type: string
              example: '总部'
          type: object
    type: object
  depotRefundDetail:
    title: 退货门店详情表
    description: 退货门店详情表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - depot_name
            - refund_count
            - refund_money
            - refund_integral
            - refund_wastage_money
            - max_number_title
            - max_money_title
          properties:
            depot_name:
              description: 便利店
              type: string
              example: '安心总部'
            refund_count:
              description: 退货商品总数
              type: integer
              example: 1
            refund_money:
              description: 退款金额
              type: integer
              example: 2.9
            refund_integral:
              description: 退货总积分
              type: integer
              example: 100
            refund_wastage_money:
              description: 退货损耗金额
              type: integer
              example: 10
            max_number_title:
              description: 数量最多商品
              type: string
              example: '啤酒'
            max_money_title:
              description: 金额最高商品
              type: string
              example: '啤酒'
          type: object
    type: object
  depotRefundGoodsDetail:
    title: 门店退货商品详情表
    description: 门店退货商品详情表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - goods_title
            - buy_count
            - refund_count
            - refund_money
            - num
          properties:
            goods_title:
              description: 品名
              type: string
              example: '水'
            buy_count:
              description: 今日销量
              type: integer
              example: 1
            refund_count:
              description: 退货数量
              type: integer
              example: 2.9
            refund_money:
              description: 退货金额
              type: integer
              example: 100
            num:
              description: 序号
              type: integer
              example: 1
          type: object
    type: object
  refundGoods:
    title: 退货商品汇总表
    description: 退货商品汇总表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - num
            - goods_title
            - buy_count
            - refund_count
            - refund_money
            - depot_name
          properties:
            num:
              description: 序号
              type: integer
              example: 1
            goods_title:
              description: 品名
              type: string
              example: '水'
            buy_count:
              description: 今日销量
              type: integer
              example: 1
            refund_count:
              description: 退货数量
              type: integer
              example: 2.9
            refund_money:
              description: 退货金额
              type: integer
              example: 100
            depot_name:
              description: 数量最多门店
              type: string
              example: '总部'
          type: object
    type: object
  avgSales:
    title: 当月均值报表
    description: 当月均值报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      has_info:
        type: boolean
        example: true
      data:
        properties:
          depot_name:
            type: string
            description: 门店
            example: '安心总部'
          total_bed:
            type: integer
            description: 总床位数
            example: 1
          rental_bed:
            description: 出租床位数
            type: integer
            example: 1
          checkin_bed:
            description: 实际入住人数
            type: integer
            example: 1
          total_fee:
            description: 便利店当月平均销售额
            type: integer
            example: 1
          store_id:
            description: 门店id
            type: integer
            example: 1
        type: object
    type: object
  avgSalesChart:
    title: 当月均值图表
    description: 当月均值图表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          data:
            type: array
            description: 当月报表数据
            example:
              - '1'
              - '2'
          data_time:
            type: array
            description: 总时间轴
            example:
              - '2017-11-10'
              - '2017-11-11'
        type: object
    type: object
  activityAdd:
    title: 添加活动
    description: 添加活动
    properties:
      depot_id:
        description: 提货点ID
        example: 11
        type: integer
      title:
        description: 活动名称
        example: asf
        type: string
      goods_id_list:
        description: 赠品ID数组
        type: array
        example: [1,2,3]
      start_time:
        description: 开始时间
        type: string
        example: '2017-05-06 12:12:12'
      end_time:
        description: 结束时间
        type: string
        example: '2017-05-06 12:12:12'
      limit_price:
        description: 满赠金额
        type: string
        example: 1.1
      limit_time:
        description: 限购次数
        type: integer
        example: 1
    type: object
  totalProfitResponse:
    title: 利润汇总报表
    description: 利润汇总报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017-05-06'
          order_of_people:
            type: integer
            description: 下单人数
            example: 1
          order_num:
            description: 订单数量
            type: integer
            example: 1
          avg_price:
            description: 商品进价
            type: integer
            example: 1
          total_fee:
            description: 商品售价
            type: integer
            example: 1
          pay_fee:
            description: 实际支付
            type: integer
            example: 1000
          integral:
            description: 使用积分
            type: integer
            example: 1000
          refund_wastage_money:
            description: 售后损耗金额
            type: integer
            example: 1000
          check_loss:
            description: 盘库损耗
            type: integer
            example: 1000
          gross_profit:
            description: 毛利润（含积分）
            type: integer
            example: 1000
          net_profit:
            description: 净利润（含积分）
            type: integer
            example: 1000
          net_profit_no_integral:
            description: 净利润(不含积分)
            type: integer
            example: 1000
        type: object
    type: object
  profitDetailResponse:
    title: 利润汇总报表
    description: 利润汇总报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          store_name:
            type: string
            description: 便利店
            example: '安心总部'
          order_of_people:
            type: integer
            description: 下单人数
            example: 1
          order_num:
            description: 订单数量
            type: integer
            example: 1
          avg_price:
            description: 商品进价
            type: integer
            example: 1
          current_price:
            description: 商品售价
            type: integer
            example: 1
          pay_fee:
            description: 实际支付
            type: integer
            example: 1000
          integral:
            description: 使用积分
            type: integer
            example: 1000
          refund_wastage_money:
            description: 售后损耗金额
            type: integer
            example: 1000
          check_loss:
            description: 盘库损耗
            type: integer
            example: 1000
          gross_profit:
            description: 毛利润（含积分）
            type: integer
            example: 1000
          net_profit:
            description: 净利润（含积分）
            type: integer
            example: 1000
          net_profit_no_integral:
            description: 净利润(不含积分)
            type: integer
            example: 1000
        type: object
    type: object
  profitChartResponse:
    title: 利润汇总报表
    description: 利润汇总报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        type: array
        items:
          required:
            - chart_list
            - start_time
          properties:
            chart_list:
              description: 数据
              type: array
              items:
                required:
                  - name
                  - data
                  - is_show
                  - start_time
                properties:
                  name:
                    description: 折线名称
                    type: string
                    example: '总计'
                  is_show:
                    description: 是否显示
                    type: boolean
                    example: true
                  start_time:
                    description: 有数据起始时间
                    type: string
                    example: '2017-12-02'
                  data:
                    description: 数据
                    type: array
                    example:
                      - '1'
                      - '2'
            start_time:
              description: X轴起始日期
              type: string
              example:
                '2017-12-25'
          type: object
      total:
        type: array
        items:
          required:
            - chart_list
            - start_time
          properties:
            total_list:
              description: 数据
              type: array
              items:
                required:
                  - name
                  - data
                  - is_show
                  - start_time
                properties:
                  name:
                    description: 折线名称
                    type: string
                    example: '总计'
                  is_show:
                    description: 是否显示
                    type: boolean
                    example: true
                  start_time:
                    description: 有数据起始时间
                    type: string
                    example: '2017-12-02'
                  data:
                    description: 数据
                    type: array
                    example:
                      - '1'
                      - '2'
            start_time:
              description: X轴起始日期
              type: string
              example:
                '2017-12-15'
          type: object
    type: object
  weeklySalesResponse:
    title: 销量汇总周报表
    description: 销量汇总周报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          depot_name:
            type: string
            description: 便利店
            example: '总部'
          total_fee:
            type: integer
            description: 订单金额
            example: 1
          order_of_people:
            description: 下单人数
            type: integer
            example: 1
          order_num:
            description: 下单数量
            type: integer
            example: 1
          increase_percent:
            description: 金额增长比例
            type: string
            example: '20%'
          integral:
            description: 积分
            type: integer
            example: 1000
          pay_fee:
            description: 实际支付金额
            type: integer
            example: 1000
          max_fee:
            description: 单笔最高金额
            type: integer
            example: 1000
          day:
            description: 日期
            type: string
            example: '2017/10/01-2017/10/15'
        type: object
    type: object
  commonSalesResponse:
    title: 退货汇总报表
    description: 退货汇总报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        properties:
          day:
            type: string
            description: 日期
            example: '2017/10/11-2017/11/15'
          total_refund_count:
            type: integer
            description: 退货商品总数
            example: 1
          refund_money:
            description: 退款金额
            type: integer
            example: 1
          refund_integral:
            description: 退货总积分
            type: integer
            example: 1
          refund_stock_wastage:
            description: 退货损耗金额
            type: integer
            example: 100
          max_refund_money_depot:
            description: 金额最高门店
            type: string
            example: '总部'
          max_refund_count_title:
            description: 数量最多商品
            type: string
            example: '水'
        type: object
    type: object
  dailySales:
    title: 销量汇总日报表
    description: 销量汇总日报表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - store_name
            - order_of_people
            - order_num
            - total_fee
            - increase_percent
            - integral
            - pay_fee
            - max_fee
          properties:
            store_name:
              description: 便利店
              type: string
              example: 安心总部
            order_of_people:
              description: 下单人数
              type: string
              example: '2'
            order_num:
              description: 订单数量
              type: string
              example: '2'
            total_fee:
              description: 订单金额
              type: integer
              example: '100'
            increase_percent:
              description: 金额增长比例
              type: string
              example: '90%'
            integral:
              description: 使用积分
              type: integer
              example: '1000'
            pay_fee:
              description: 实际支付金额
              type: integer
              example: '1000'
            max_fee:
              description: 单笔最高金额
              type: integer
              example: '10'
          type: object
    type: object
  totalSales:
    title: 销量汇总报表
    description: 销量汇总报表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          require:
            - day
            - store_name
            - order_of_people
            - order_num
            - total_fee
            - increase_percent
            - integral
            - pay_fee
            - max_fee
          properties:
            day:
              description: 日期
              type: string
              example: '2017/11/1~2017/11/15'
            store_name:
              description: 便利店
              type: string
              example: 安心总部
            order_of_people:
              description: 下单人数
              type: string
              example: '2'
            order_num:
              description: 订单数量
              type: string
              example: '2'
            total_fee:
              description: 订单金额
              type: integer
              example: '100'
            increase_percent:
              description: 金额增长比例
              type: string
              example: '90%'
            integral:
              description: 使用积分
              type: integer
              example: '1000'
            pay_fee:
              description: 实际支付金额
              type: integer
              example: '1000'
            max_fee:
              description: 单笔最高金额
              type: integer
              example: '10'
          type: object
    type: object
  chartSales:
    title: 销量汇总日图表
    description: 销量汇总日图表
    properties:
      code:
        type: string
        example: SUCCESS
      msg:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          required:
            - chart_list
            - start_time
          properties:
            chart_list:
              description: 数据
              type: array
              items:
                required:
                  - name
                  - data
                  - is_show
                  - start_time
                properties:
                  name:
                    description: 折线名称
                    type: string
                    example: '总计'
                  is_show:
                    description: 是否显示
                    type: boolean
                    example: true
                  start_time:
                    description: 有数据起始时间
                    type: string
                    example: '2017-12-02'
                  data:
                    description: 数据
                    type: array
                    example:
                      - '1'
                      - '2'
            start_time:
              description: X轴起始日期
              type: array
              example:
                - '2017-12-03'
                - '2017-12-04'
          type: object
    type: object
  checkGoodsResponse:
    title: 商品盘点汇总月报表
    description: 商品盘点汇总月报表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      count:
        type: integer
        example: 50
      data:
        type: array
        items:
          properties:
            num:
              type: integer
              description: 序号
              example: 1
            title:
              type: string
              description: 商品名
              example: '格力高 百力滋微辣比萨味 65g克/盒'
            last_month_stock:
              description: 上月末库存数量
              type: integer
              example: 1
            last_month_stock_money:
              description: 上月末存货金额
              type: string
              example: 100
            avg_price:
              description: 本月进货--进价
              type: string
              example: 100
            add_stock:
              description: 本月进货--进货量
              type: string
              example: '100'
            purchase_price:
              description: 本月进货-采购金额合计
              type: string
              example: '100'
            sales_num:
              description: 本月销售-销售数量
              type: string
              example: '100'
            current_price:
              description: 本月销售-销售单价
              type: string
              example: '100'
            sales_total_price:
              description: 本月销售-销售金额
              type: string
              example: '100'
            stock:
              description: 本月末-剩余库存
              type: string
              example: '100'
            weighting_avg_prince:
              description: 本月末-加权平均单价
              type: string
              example: '100'
            today_total:
              description: 本月末-结余合计
              type: string
              example: '100'
          type: object
    type: object
  QRGetlistResponse:
    title: 发送列表
    description: 发送列表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        properties:
          id:
            type: integer
            description: 序号
            example: 1
          title:
            type: string
            description: 活动名称
            example: 1
          stock:
            type: integer
            description: 积分数量
            example: 1
          integral:
            type: integer
            description: 积分总数
            example: 1
          time:
            type: string
            description: 扫码有效期
            example: 1
          send_num:
            type: integer
            description: 已领取数
            example: 1
          text:
            type: string
            description: 提示
            example: dfwdfsdf
        type: object
    type: object
  QRlistResponse:
    title: 发送列表
    description: 发送列表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        properties:
          id:
            type: integer
            description: 序号
            example: 1
          stock:
            type: integer
            description: 数量
            example: 1
          integral:
            type: integer
            description: 积分总数
            example: 1
          qrcode_num:
            type: string
            description: 二维码数量
            example: 1
          company:
            type: string
            description: 发放单位名称
            example: 1
          time:
            type: string
            description: 扫码有效期
            example: 555555
          creator:
            type: string
            description: 创建人
            example: asfsd
          create_time:
            type: string
            description: 创建时间
            example: '2017-05-06 12:51:15'
          remark:
            type: string
            description: 发放原因备注
            example: fsadfds
          status:
            type: string
            description: 状态
            example: asfasf
          status_word:
            type: string
            description: 状态中文名称
            example: sdgfdsf
          type:
            type: string
            description: 类型
            example: single
          title:
            type: string
            description: 活动名称
            example: gfdsdsffd
          rule:
            type: string
            description: 活动规则
            example: dgdsadsgdsag
          banner_img:
            type: string
            description: banner
            example: asgsggsd
        type: object
    type: object
  sendListResponse:
    title: 发送列表
    description: 发送列表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        properties:
          id:
            type: integer
            description: id
            example: 1
          coupon_trade_no:
            description: 优惠券批次
            type: string
            example: FD
          content:
            description: 优惠券内容
            type: string
            example: FDFDF
          time:
            description: 优惠券时间
            type: string
            example: '2017-05-03'
          send_number:
            description: 发送数量
            type: integer
            example: 1000
          status:
            description: 状态
            type: string
            example: 发放中
          button:
            description: 按钮显示
            type: string
            example: cancel:取消发送 pause:停止发送 sending:开始发送
          type:
            description: 发送类型
            type: string
            example: special:特殊 normal:普通
          detail:
            description: 查看内容
            properties:
              obj:
                description: 发送对象
                type: string
                example: fgdfdsa
              login_rate:
                description: 登录频次
                type: string
                example: fsad
              buy_rate:
                description: 消费频次
                type: string
                example: dasffds
              coupon:
                description: 优惠券批次
                type: string
                example: gdsfg
              is_duplicate_removal:
                description: 是否去重
                type: boolean
                example: true
              operator:
                description: 操作人
                type: string
                example: 杨毅
            type: object
        type: object
    type: object
  getDetailByGoodsSnResponse:
    title: 根据商品编码搜索商品
    description: 根据商品编码搜索商品
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        properties:
          goods_id:
            description: 商品ID
            type: integer
            example: 1
          current_price:
            description: 现价
            type: string
            example: 1.1
          title:
            description: 商品标题
            type: string
            example: 果汁
          goods_sn:
            description: 商品编码
            type: string
            example: Gdsadsadsd
          stock:
            description: 库存
            type: integer
            example: 100
        type: object
    type: object
  addBanner:
    title: 添加横幅
    description: 添加横幅
    properties:
      id:
        description: 横幅id
        type: integer
        example: 1
      category:
        description: 横幅分类
        type: string
        example: 'home'
      cover:
        description: 幻灯片地址
        type: string
        example: "http://img.axhome.com.cn/axapp/2a/b5/2ab559a9b94658fbcec05ea131af4cd5.jpg"
      jump_type:
        description: 跳转类型
        type: string
        example: "common"
      jump_value:
        description: 跳转值
        type: string
        example: "http://sep9.cn/ub155x"
      order_num:
        description: 排序
        type: integer
        example: 1
      is_show:
        description: 是否展示
        type: integer
        example: 1
      store_id_str:
        description: 关联该幻灯片的门店
        type: array
        example: ['1']
      start_time:
        description: 开始时间
        type: string
        example: '2017-05-06'
      end_time:
        description: 结束时间
        type: string
        example: '2017-05-06'
  addsCoupon:
    title: 创建优惠券
    description: 创建优惠券
    properties:
      start_time:
        description: 开始时间
        type: string
        example: '2017-05-06'
      end_time:
        description: 结束时间
        type: string
        example: '2017-12-20'
      expiry_date:
        description: 发送后的有效时间
        type: integer
        example: 30
      type:
        description: 优惠券类型 full_reduce:满减券 transport:配送券
        type: string
        example: full_reduce
      limit_category_id_array:
        description: 分类ID数组
        type: array
        example: [1,2]
      limit_goods_id_array:
        description: 商品ID数组
        type: array
        example: [1,2]
      effect:
        description: 黑白名单 allow:白名单 deny:黑名单
        type: string
        example: allow
      limit_price:
        description: 限制金额
        type: integer
        example: 50
      title:
        description: 优惠券标题
        type: string
        example: aaaaaaaaaa
      price:
        description: 优惠券金额
        type: integer
        example: 50
      stock:
        description: 优惠券数量
        type: integer
        example: 5000
      depot_effect:
        description: 提货点黑白名单
        type: string
        example: allow
      depot_id_list:
        description: 提货点id数组
        type: array
        example: [1,2,3]
  seeResponse:
    title: 查看二维码领取状态
    description: 查看二维码领取状态
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        properties:
          qr_sn:
            description: 编码
            type: string
            example: dsfgasdf
          user_name:
            description: 用户名称
            type: string
            example: sdafds
          phone:
            description: 电话号码
            type: integer
            example: 18817322767
          integral:
            description: 积分数量
            type: integer
            example: 111
          send_time:
            description: 领取时间
            type: string
            example: '2014-02-03 12:12:12'
        type: object
    type: object
  checkResponse:
    title: 查看二维码编号列表
    description: 查看二维码编号列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        description: 数组
        type: array
        example: ['3133213','2df651dsf']
    type: object
  createResponse:
    title: 用户列表
    description: 用户列表
    type: array
    items:
      properties:
        id:
          description: 用户ID
          type: integer
          example: 1
        name:
          description: 用户名称
          type: string
          example: asdas
      type: object
  integralAdd:
    title: 添加积分发送
    description: 添加积分发送
    properties:
      phoneList:
        description: 发送的手机号码列表
        type: array
        example: ['13213','3132131']
      integral:
        description: 积分
        type: integer
        example: 1000
      title:
        description: 活动名称
        type: string
        example: dfsshdfh
      send_time:
        description: 发送时间
        type: string
        example: '2017-09-10'
      brief:
        description: 发放原因备注
        type: string
        example: dgasdgsdg
    type: object
  integralList:
    title: 发送列表
    description: 发送列表
    properties:
      msg:
        type: string
        example: SUCCESS
      code:
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: 序号
              example: 1
              type: integer
            title:
              description: 活动名称
              example: asdasdas
              type: string
            integral:
              description: 积分数
              example: 100
              type: integer
            phone:
              description: 手机号
              example: 18817322766
              type: integer
            create_user:
              description: 创建人
              example: 张三
              type: string
            create_time:
              description: 创建时间
              example: '2017-05-06'
              type: string
            send_time:
              description: 发送时间
              example: '2017-05-06'
              type: string
            brief:
              description: 发送原因备注
              example: 6asf65a6s
              type: string
            status:
              description: 发送状态
              example: 发送中
              type: string
            phone_list:
              description: 号码列表
              example: ['18817419','6514614']
              type: array
          type: object
  popupGetResponse:
    title: 获取弹窗
    description: 获取弹窗
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            content:
              type: string
              description: 内容
              example: asasas
          type: object
    type: object
  popupListResponse:
    title: 弹窗列表
    description: 弹窗列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 总数
        type: integer
      data:
        type: array
        items:
          properties:
            id:
              type: integer
              description: id
              example: 1231
            brief:
              type: string
              description: 简介
              example: asdasd
            create_time:
              type: string
              description: 创建时间
              example: '2017-05-06 21:12:12'
            content:
              type: string
              description: 内容
              example: asasas
          type: object
    type: object
  purchaseList:
    title: 进货单列表接口
    description: 进货单列表接口
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: 1
      data:
        type: array
        items:
          properties:
            id:
              description: 序号
              example: 111
              type: integer
            purchase_sn:
              description: 进货单编号
              example: sadasf
              type: string
            operator:
              description: 管理员
              type: string
              example: sfasf
            create_time:
              description: 进货时间
              type: string
              example: '2017-05-06 12:12:12'
            discount_price:
              description: 优惠金额
              type: string
              example: '1.1'
            postage:
              description: 邮费
              type: string
              example: '1.1'
          type: object
    type: object
  purchasedetail:
    title: 进货单查看接口
    description: 进货单查看接口
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        properties:
          purchase_sn:
            description: 进货单号
            type: string
            example: asfasf
          discount_price:
            description: 优惠金额
            type: string
            example: 1.1
          purchase_price:
            description: 进货金额
            type: string
            example: 1.1
          purchase_time:
            description: 进货时间
            type: string
            example: 1.1
          detail:
            type: array
            items:
              properties:
                id:
                  description: 进货记录id
                  example: 1
                  type: integer
                goods_id:
                  description: 商品ID
                  example: 1
                  type: integer
                title:
                  description: 商品名称
                  example: 可口可乐
                  type: string
                addStock:
                  description: 进货数量
                  example: 11
                  type: integer
                purchasePrice:
                  description: 进货前总价
                  example: 1.1
                  type: string
                unitPrice:
                  description: 单价
                  example: 1.1
                  type: string
                postage:
                  description: 邮费分摊金额
                  example: 1.1
                  type: string
                discountPrice:
                  description: 优惠分摊金额
                  example: 1.1
                  type: string
                totalPrice:
                  description: 总金额
                  example: 1.1
                  type: string
              type: object
        type: object
    type: object
  tempListResponse:
    title: 临时进货列表
    description: 临时进货列表
    properties:
      id:
        description: 商品ID
        example: 1
        type: integer
      num:
        description: 进货数量
        example: 1
        type: integer
      purchase_price:
        description: 进货价格
        example: 1.1
        type: string
      current_price:
        description: 售价
        example: 1.1
        type: string
      title:
        description: 商品名称
        example: asfas
        type: string
      sn:
        description: 序号
        example: 1
        type: integer
      unit_price:
        description: 单价
        example: 1.1
        type: string
      postage:
        description: 邮费分摊金额
        example: 1.1
        type: string
      discount_price:
        description: 优惠分摊金额
        example: 1.1
        type: string
      total_price:
        description: 总金额
        example: 1.1
        type: string
    type: object
  activityList:
    title: 活动列表
    description: 活动列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              type: integer
              example: 1
              description: id
            depot_id:
              type: integer
              example: 1
              description: 提货点ID
            depot_name:
              type: string
              example: asfasf
              description: 提货点名称
            title:
              type: string
              example: asfasf
              description: 活动名称
            goods_id_list:
              type: string
              example: 1
              description: 商品ID
            start_time:
              type: string
              example: '2017-05-05 12:12:12'
              description: 开始时间
            end_time:
              type: string
              example: '2017-05-05 12:12:12'
              description: 结束时间
            operator:
              type: string
              example: fsafas
              description: 操作人
            limit_time:
              type: integer
              example: 1
              description: 限制次数
            limit_price:
              type: string
              example: 1.1
              description: 限制金额
          type: object
    type: object
  couponQrCodeResponse:
    title: 优惠券二维码
    description: 优惠券二维码
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        description: 二维码base64位编码
        type: string
        example: sfafsa
    type: object
  sortIndex:
    title: 模块排序详情
    description: 模块排序详情
    properties:
      id:
        description: id
        example: 1
        type: integer
      order_number:
        description: 排序序号
        example: 1
        type: integer
    type: object
  modelListResponse:
    title: 模块列表
    description: 模块列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        properties:
          id:
            description: id
            example: 1
            type: integer
          order_number:
            description: 排序
            example: 1
            type: integer
          title:
            description: 名称
            example: asdfasd
            type: string
          is_show:
            description: 是否显示
            example: true
            type: boolean
        type: object
    type: object
  applicationcategoryList:
    title: 模块分类列表
    description: 模块分类列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: 500
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            name:
              description: 名称
              example: asd
              type: string
          type: object
    type: object
  applicationList:
    title: 模块列表
    description: 模块列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: 500
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            icon:
              description: 缩略图地址
              example: 1
              type: string
            category:
              description: 所属分类
              example: 1
              type: string
            category_id:
              description: 所属分类id
              example: 1
              type: integer
            order_number:
              description: 排序
              example: 1
              type: integer
            name:
              description: 名称
              example: asd
              type: string
            is_open:
              description: 是否开启
              example: false
              type: boolean
            create_time:
              description: 创建时间
              example: '2017-12-12 12:12:12'
              type: string
            jump_type:
              description: 类型标识
              example: asfas
              type: string
            jump_value:
              description: 跳转地址
              example: aa
              type: string
            is_hide:
              description: 是否审核隐藏 true:是 false:否
              example: true
              type: boolean
            version:
              description: 版本号
              example: 1.1
              type: string
          type: object
    type: object
  applicationCategoryList:
    title: 模块分类列表
    description: 模块分类列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      count:
        description: 数量
        type: integer
        example: 500
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            order_number:
              description: 排序
              example: 1
              type: integer
            name:
              description: 名称
              example: asd
              type: string
            is_open:
              description: 是否开启
              example: false
              type: boolean
            create_time:
              description: 创建时间
              example: '2017-12-12 12:12:12'
              type: string
          type: object
    type: object
  applicationAdd:
    title: 添加模块
    description: 添加模块
    properties:
      icon:
        description: 缩略图地址
        example: asf
        type: string
      category_id:
        description: 分类ID
        example: 1
        type: integer
      name:
        description: 应用名称
        example: safd
        type: string
      jump_type:
        description: 应用类型标识
        example: ss
        type: string
      jump_value:
        description: 跳转地址
        example: asfd
        type: string
      order_number:
        description: 排序
        example: 1
        type: integer
      is_open:
        description: 是否开启
        example: false
        type: boolean
      version:
        description: 版本号
        type: string
        example: 1.1
    type: object
  applicationCategoryAdd:
    title: 添加模块分类
    description: 添加模块分类
    properties:
      name:
        description: 分类名称
        example: safd
        type: string
      order_number:
        description: 排序
        example: 1
        type: integer
      is_open:
        description: 是否开启
        example: false
        type: boolean
    type: object
  setOption:
    title: 配置
    description: 配置
    properties:
      type:
        description: 类型 taobao hot_sale hot_say
        type: string
        example: taobao
      options:
        properties:
          type:
            description: 类型 taobao:(discount:折扣,price:价格) hot_sale(auto:自动推荐,manual:手动)
            type: string
            example: discount
          title:
            description: 标题
            type: string
            example: aa
          num:
            description: 数量 (taobao,hot_say)
            type: integer
            example: 1
          max_price:
            description: 最大价格 taobao:(type:price)
            type: string
            example: 1.1
          min_price:
            description: 最小价格 taobao:(type:price)
            type: string
            example: 1.1
          max_discount:
            description: 最大折扣 taobao:(type:discount)
            type: string
            example: 1
          min_discount:
            description: 最小折扣 taobao:(type:discount)
            type: string
            example: 1
        type:
    type:
  introListResponse:
    title: 首页推荐列表
    description: 首页推荐列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            goods_sn:
              description: 商品编码
              example: dsfg
              type: string
            title:
              description: 商品名称
              example: aa
              type: string
            category:
              description: 类别
              example: 1
              type: string
            weight:
              description: 权重
              example: 1
              type: string
            extra_weight:
              description: 人工加权重
              example: 1
              type: string
          type: object
    type: object
  depotListResponse:
    title: 提货点列表
    description: 提货点列表
    type: array
    items:
      properties:
        name:
          description: 所属地名称
          type: string
          example: 1
        list:
          type: array
          items:
            properties:
              id:
                description: id
                type: integer
                example: 1
              title:
                description: 提货点名称
                type: string
                example: 21
              address:
                description: 提货点地址
                type: string
                example: asf
            type: object
      type: object
  scanbanner:
    title: banner
    description: banner
    type: array
    items:
      properties:
        img:
          description: 图片
          type: string
          example: asd
        jump:
          properties:
            jump_type:
              description: 跳转类型
              type: string
              example: asfd
            jump_value:
              description: 跳转值
              type: string
              example: afasf
          type: object
      type: object
  scanShopcreateResponse:
    title: 创建订单
    description: 创建订单
    order_sn:
      description: 订单编码
      type: string
      example: SUCCESS
  scanShopState:
    title: 获取订单状态
    description: 获取订单状态
    properties:
      status:
        description: FAILED
        type: string
        example: SUCCESS
      title:
        description: 描述
        type: string
        example: 支付失败
      text:
        description: 文字
        type: string
        example: 订单不存在
    type: object
  scanShopget:
    title: 扫码购物订单列表
    description: 扫码购物订单列表
    type: array
    items:
      properties:
        type:
          description: 类型
          type: string
          example: sadf
        list:
          type: array
          items:
            properties:
              cover:
                description: 图片
                example: asd
                type: string
              title:
                description: 名称
                example: aa
                type: string
              current_price:
                description: 售价
                example: 1.1
                type: string
              goods_id:
                description: 商品ID
                example: 1
                type: integer
            type: object
      type: object
  optionDetail:
    title: 配置内容页面
    description: 配置内容页面
    properties:
      depot_id:
        type: integer
        description: 提货点ID
        example: 1
      type:
        type: string
        description: 类型 taobao:淘宝特惠  hot_sale:便利店热卖  hot_say:热评帖子
        example: hot_sale
  scanShopgetgoods:
    title: 扫码得到商品
    description: 扫码得到商品
    properties:
      goods_id:
        description: 商品ID
        type: integer
        example: 1
      current_price:
        description: 价格
        type: string
        example: 1.1
      title:
        description: 商品名称
        type: string
        example: asfd
      cover:
        description: 商品图片
        type: string
        example: asf
      number:
        description: 数量
        type: integer
        example: 1
    type: object
  goodsCostPriceListResponse:
    title: 商品进价单列表
    description: 商品进价单列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            region_id:
              description: 省份id
              example: 1
              type: integer
            region_name:
              description: 省份名称
              example: '上海'
              type: string
            operators:
              description: 运营商
              example: 'move'
              type: string
            operators_text:
              description: 运营商
              example: '移动'
              type: string
            goods_id:
              description: 商品id
              example: 1
              type: string
            cost_price:
              description: 成本价
              example: 1
              type: string
            update_time:
              description: 更新时间
              example: "2017-03-13 21:27:07"
              type: string
            create_time:
              description: 添加时间
              example: '2017-03-13 21:27:07'
              type: string
          type: object
    type: object
  costPriceData:
    title: 进价数据
    description: 进价数据
    properties:
      id:
        description: ID
        type: integer
        example: 1
      goods_id:
        description: 商品ID
        type: integer
        example: 1
      operators:
        description: 运营商
        type: string
        example: 'move'
      region_id:
        description: 区域id
        type: string
        example: '1'
      cost_price:
        description: 进价
        type: string
        example: '99'
    type: object
  addTaobaoCategory:
    title: 添加淘宝分类
    description: 添加淘宝分类
    properties:
      max_value:
        description: 最大值
        type: string
        example: '1'
      min_value:
        description: 最小值
        type: string
        example: '1'
      name:
        description: 分类名称
        type: string
        example: '女装'
      type:
        description: 类型
        type: string
        example: 'price_interval'
    type: object
  updateCategoryOrderByList:
    title:
    description: 根据分类列表更新分类排序
    properties:
      list:
        description: 列表
        type: array
        items:
          properties:
            id:
              description: id
              type: string
              example: '1'
            order_number:
              description: 排序
              type: string
              example: '1'
          type: object
    type: object
  taobaoCategoryListResponse:
    title: 特惠分类列表
    description: 特惠分类列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            name:
              description: 商品名称
              example: '淘便宜'
              type: string
            count:
              description: 数量
              example: '11'
              type: string
            orderNum:
              description: 排序
              example: 1
              type: string
            max_value:
              description: 最大值
              example: 1
              type: string
            min_value:
              description: 最小值
              example: 1
              type: string
            addTime:
              description: 添加时间
              type: string
              example: '2017-06-28 16:50:32'
          type: object
    type: object
  taobaoCategoryGetResponse:
    title: 绑定列表
    description: 绑定列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: id
              example: 1
              type: integer
            name:
              description: 商品名称
              example: '淘便宜'
              type: string
            cid:
              description: 分类id
              example: '11'
              type: string
            is_show:
              description: 是否展示
              example: true
              type: boolean
          type: object
    type: object
  taobaoRunStautsResponse:
    title: 日志列表
    description: 日志列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            count:
              example: '3'
              type: string
            create_time:
              example: '2018-01-09 11:00:10'
              type: string
            create_timestamp:
              example: '1515466810'
              type: string
            id:
              example: 'br6PyAGwmRuwy6t9'
              type: string
            jump:
              example: '0'
              type: string
            state:
              example: '任务完成'
              type: string
            update_time:
              type: string
              example: '2018-01-09 11:00:11'
          type: object
    type: object
  taobaoGoodsListResponse:
    title: 商品列表
    description: 商品列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            balance:
              example: '9000'
              type: string
            cover:
              example: 'http://img.alicdn.com/bao/uploaded/i4/758752802/TB1WL2MjDnI8KJjy0FfXXcdoVXa_!!0-item_pic.jpg_100x100.jpg'
              type: string
            from:
              example: '天猫'
              type: string
            item_url:
              example: 'https://s.click.taobao.com/'
              type: string
            nav:
              example: '书籍/杂志/报纸'
              type: string
            price:
              example: '19.9'
              type: string
            rule:
              type: string
              example: '满19元减10元'
            title:
              example: '小兔托尼成长'
              type: string
            total:
              example: '20000'
              type: string
            url:
              type: string
              example: 'https://uland.taobao.com/'
          type: object
    type: object
  expire:
    title: 保质期对象
    description: 保质期对象
    properties:
      depot_id:
        description: 提货点ID
        type: integer
        example: 1
      goods_id:
        description: 商品ID
        type: integer
        example: 1
      expiry_date:
        description: 过期时间
        type: string
        example: '2017-01-02'
  expiryNotice:
    title: 接口返回对象
    description: 接口返回对象
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        properties:
          text:
            description: 描述
            type: string
            example: asfasf
        type: object
    type: object
  balanceList:
    title: 结算列表
    description: 结算列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            goods_sn:
              description: 商品编码
              type: string
              example: 6971028800023
            title:
              description: 商品名称
              type: string
              example: 可口可乐
            category:
              description: 商品分类
              type: string
              example: 饮料
            purchase_num:
              description: 进货数量
              type: integer
              example: 10
            total_price:
              description: 进货总价
              type: string
              example: 10.51
            purchase_price:
              description: 当前最新进价
              type: string
              example: 1.05
            sales_num:
              description: 当前售量
              type: integer
              example: 20
            sales_price:
              description: 当前销售成本
              type: string
              example: 21.10
            refund_num:
              description: 周期内退订返库数
              type: integer
              example: 10
            refund_price:
              description: 周期内退订返库成本
              type: string
              example: 21.10
            pandian_num:
              description: 周期内盘库损耗数
              type: integer
              example: 10
            pandian_price:
              description: 周期内盘库损耗成本
              type: string
              example: 21.10
            return_goods_num:
              description: 周期内退货数量
              type: integer
              example: 10
            return_goods_price:
              description: 周期内退货金额
              type: string
              example: 21.10
            last_balance_price:
              description: 上期期末单价
              type: string
              example: 5.50
            balance_price:
              description: 本期预计单价
              type: string
              example: 4.00
          type: object
    type: object
  balanceHistoryList:
    title: 库存结算历史记录商品列表
    description: 库存结算历史记录商品列表
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            goods_sn:
              description: 商品编码
              type: string
              example: 6971028800023
            title:
              description: 商品名称
              type: string
              example: 可口可乐
            category:
              description: 商品分类
              type: string
              example: 饮料
            purchase_num:
              description: 进货数量
              type: integer
              example: 10
            total_price:
              description: 进货总价
              type: string
              example: 10.51
            purchase_price:
              description: 当前最新进价
              type: string
              example: 1.05
            sales_num:
              description: 当前售量
              type: integer
              example: 20
            sales_price:
              description: 当前销售成本
              type: string
              example: 21.10
            refund_num:
              description: 周期内退订返库数
              type: integer
              example: 10
            refund_price:
              description: 周期内退订返库成本
              type: string
              example: 21.10
            pandian_num:
              description: 周期内盘库损耗数
              type: integer
              example: 10
            pandian_price:
              description: 周期内盘库损耗成本
              type: string
              example: 21.10
            return_goods_num:
              description: 周期内退货数量
              type: integer
              example: 10
            return_goods_price:
              description: 周期内退货金额
              type: string
              example: 21.10
          type: object
    type: object
  balanceHistory:
    title: 库存结算历史记录
    description: 库存结算历史记录
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            id:
              description: 记录ID
              type: integer
              example: 1
            create_time:
              description: 创建时间
              type: string
              example: '2017-06-05 12:12:12'
            operator:
              description: 操作人
              type: string
              example: 杨毅
          type: object
    type: object
  balanceDetail:
    title: 详细进货信息
    description: 详细进货信息
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
      data:
        type: array
        items:
          properties:
            time:
              type: array
              example: ['2017-01-05','2017-01-06']
            data:
              type: array
              example: [1.5,2.5]
          type: object
    type: object
  ApiResponse:
    title: 接口返回对象
    description: 接口返回对象
    properties:
      code:
        description: 状态码
        type: string
        example: SUCCESS
      msg:
        description: 接口返回描述
        type: string
        example: SUCCESS
    type: object
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
tags:
  - name: cs/category
    description: 便利店分类管理
  - name: depot
    description: 便利店提货点管理
  - name: cs/goods
    description: 便利店商品管理
